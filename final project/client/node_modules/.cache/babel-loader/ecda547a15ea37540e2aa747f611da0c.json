{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lepan\\\\Desktop\\\\CIS550-Project\\\\final project\\\\client\\\\src\\\\components\\\\RecipeList.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport PropTypes from 'prop-types';\nimport image0 from \"../images/Picture5.png\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\n\nfunction RecipeList(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    recipeInfo\n  } = props;\n  console.log(recipeInfo.recipeInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, recipeInfo.map(recipe => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      backgroundColor: \"white\",\n      height: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    className: classes.image,\n    style: {\n      width: \"100%\",\n      height: \"80%\",\n      margin: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    alt: \"complex\",\n    src: recipe.RecipePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 0,\n    style: {\n      backgroundImage: `url(${image0})`,\n      backgroundSize: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Standard license\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Full resolution 1920x1080 \\u2022 JPEG\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"ID: 1030114\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Remove\")))))));\n}\n\n_s(RecipeList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecipeList;\nRecipeList.propTypes = {\n  recipeInfo: PropTypes.arrayOf(PropTypes.shape({\n    keyword: PropTypes.string.isRequired,\n    Author: PropTypes.string.isRequired,\n    Directions: PropTypes.string.isRequired,\n    Ingredients: PropTypes.string.isRequired,\n    RecipeName: PropTypes.string.isRequired,\n    RecipePhoto: PropTypes.string.isRequired,\n    RecipeID: PropTypes.number.isRequired,\n    TotalTime: PropTypes.string.isRequired\n  }))\n};\nRecipeList.defaultProps = {\n  recipeInfo: []\n};\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["C:/Users/lepan/Desktop/CIS550-Project/final project/client/src/components/RecipeList.js"],"names":["React","makeStyles","Grid","Paper","Typography","ButtonBase","PropTypes","image0","useStyles","theme","root","width","paper","padding","spacing","margin","maxWidth","image","height","img","display","maxHeight","RecipeList","props","classes","recipeInfo","console","log","map","recipe","backgroundColor","RecipePhoto","backgroundImage","backgroundSize","cursor","propTypes","arrayOf","shape","keyword","string","isRequired","Author","Directions","Ingredients","RecipeName","RecipeID","number","TotalTime","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport PropTypes from 'prop-types';\r\nimport image0 from \"../images/Picture5.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%'\r\n\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\n\r\nfunction RecipeList(props) {\r\n  const classes = useStyles();\r\n  const {recipeInfo} = props;\r\n  console.log(recipeInfo.recipeInfo);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {recipeInfo.map((recipe) => ( \r\n        <Grid container spacing={0} style={{backgroundColor:\"white\", height:300}}>\r\n          <Grid item xs={3}>\r\n            <ButtonBase className={classes.image} style={{width:\"100%\", height:\"80%\", margin:\"2%\"}}>\r\n              <img className={classes.img} alt=\"complex\" src={recipe.RecipePhoto} />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={0} style={{backgroundImage:`url(${image0})`, backgroundSize:\"cover\"}}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  Standard license\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  Full resolution 1920x1080 • JPEG\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  ID: 1030114\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                  Remove\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <Typography variant=\"subtitle1\">$19.00</Typography>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Grid>   \r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nRecipeList.propTypes = {\r\n    recipeInfo: PropTypes.arrayOf(\r\n        PropTypes.shape({ \r\n            keyword: PropTypes.string.isRequired,\r\n            Author: PropTypes.string.isRequired,\r\n            Directions: PropTypes.string.isRequired,\r\n            Ingredients: PropTypes.string.isRequired,\r\n            RecipeName: PropTypes.string.isRequired,\r\n            RecipePhoto: PropTypes.string.isRequired,\r\n            RecipeID: PropTypes.number.isRequired,\r\n            TotalTime: PropTypes.string.isRequired,\r\n        }),\r\n    )\r\n};\r\nRecipeList.defaultProps= {\r\n    recipeInfo:[]\r\n}\r\n\r\nexport default RecipeList;"]},"metadata":{},"sourceType":"module"}