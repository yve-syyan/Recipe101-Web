{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule editOnCopy\r\n * @format\r\n * \r\n */\n'use strict';\n\nvar getFragmentFromSelection = require('./getFragmentFromSelection');\n/**\r\n * If we have a selection, create a ContentState fragment and store\r\n * it in our internal clipboard. Subsequent paste events will use this\r\n * fragment if no external clipboard data is supplied.\r\n */\n\n\nfunction editOnCopy(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection(); // No selection, so there's nothing to copy.\n\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  }\n\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\n}\n\nmodule.exports = editOnCopy;","map":{"version":3,"sources":["C:/Users/lepan/Desktop/CIS550-Project/final project/client/node_modules/draft-js/lib/editOnCopy.js"],"names":["getFragmentFromSelection","require","editOnCopy","editor","e","editorState","_latestEditorState","selection","getSelection","isCollapsed","preventDefault","setClipboard","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,wBAAwB,GAAGC,OAAO,CAAC,4BAAD,CAAtC;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,CAA5B,EAA+B;AAC7B,MAAIC,WAAW,GAAGF,MAAM,CAACG,kBAAzB;AACA,MAAIC,SAAS,GAAGF,WAAW,CAACG,YAAZ,EAAhB,CAF6B,CAI7B;;AACA,MAAID,SAAS,CAACE,WAAV,EAAJ,EAA6B;AAC3BL,IAAAA,CAAC,CAACM,cAAF;AACA;AACD;;AAEDP,EAAAA,MAAM,CAACQ,YAAP,CAAoBX,wBAAwB,CAACG,MAAM,CAACG,kBAAR,CAA5C;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiBX,UAAjB","sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule editOnCopy\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar getFragmentFromSelection = require('./getFragmentFromSelection');\r\n\r\n/**\r\n * If we have a selection, create a ContentState fragment and store\r\n * it in our internal clipboard. Subsequent paste events will use this\r\n * fragment if no external clipboard data is supplied.\r\n */\r\nfunction editOnCopy(editor, e) {\r\n  var editorState = editor._latestEditorState;\r\n  var selection = editorState.getSelection();\r\n\r\n  // No selection, so there's nothing to copy.\r\n  if (selection.isCollapsed()) {\r\n    e.preventDefault();\r\n    return;\r\n  }\r\n\r\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\r\n}\r\n\r\nmodule.exports = editOnCopy;"]},"metadata":{},"sourceType":"script"}