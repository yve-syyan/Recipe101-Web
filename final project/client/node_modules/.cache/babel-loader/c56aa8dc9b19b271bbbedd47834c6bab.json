{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lepan\\\\Desktop\\\\CIS550-Project\\\\final project\\\\client\\\\src\\\\components\\\\RecipeList.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useEffect, useState, useReducer, useLayoutEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Pagination from '@material-ui/lab/Pagination';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport image0 from \"../images/Picture5.png\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\n\nfunction RecipeList(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    recipeInfo,\n    initialArray\n  } = props;\n  console.log(recipeInfo);\n  const [page, setPage] = useState(1);\n  let b = Array.from(Object.create(initialArray));\n  console.log(\"b\", b); // const [myarray, setMyarray] = useState(b);\n  // console.log(\"myarray: \", myarray);\n\n  const updatenum = () => setnum(num => num + 1);\n\n  const [num, setnum] = useState(0); // const prevPage2 = useRef(0);\n  // const initial = [];\n  // for(let i = 0; i < 5; i+=1) {\n  //   if((page.page-1)*5+i < recipeInfo.length){\n  //     initial.push(recipeInfo[(page.page-1)*5+i]);\n  //   }\n  // }\n  // console.log(initial);\n  // const handleChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n  // console.log(typeof myarray);\n  // const [myArray, dispatch] = useReducer((myArray2, { type, value }) => {\n  //   switch (type) {\n  //     case \"add\":\n  //       return [...myArray2, value];\n  //     case \"remove\":\n  //       return myArray2.filter((_, index) => index === 0);\n  //     default:\n  //       return myArray2;\n  //   }\n  // }, []);\n  // const addList = () => {\n  //    for(let i = 0; i < 5; i+=1) {\n  //      if((page.page-1)*5+i < recipeInfo.length){\n  //       setMyarray(array => [...array, recipeInfo[(page.page-1)*5+i]]);\n  //      } \n  //    }\n  // }\n\n  const handlePageChange = (event, value) => {\n    // setMyarray(\n    //   recipeInfo.slice((value-1)*5, (value-1)*5+5)\n    // );\n    b = recipeInfo.slice((value - 1) * 5, (value - 1) * 5 + 5);\n    updatenum();\n    setPage(value);\n  }; // const initialChange = () => {\n  //   for(let i = 0; i < 5; i+=1) {\n  //     if(page.page === 0 && (page.page-1)*5+i < recipeInfo.length){\n  //       dispatch({type:\"add\", value: recipeInfo[(page.page-1)*5+i]});\n  //     }d\n  //   }\n  // }\n  // useEffect(() => {\n  //   console.log(page2, \"page2Value\");\n  //   if(firstUpdate.current && page2 === -2) {\n  //     setPage({\n  //       page: 1\n  //     });\n  //     firstUpdate.current = false;\n  //     // prevPage2.current = page2;\n  //     console.log(\"en\");\n  //   } \n  // else if (page2 !==  prevPage2.current) {\n  //   prevPage2.current = page2;\n  //   setPage({\n  //     page: 1\n  //   });\n  // }\n  // })\n  // const cleanup = () => {\n  //   const n = myArray.length;\n  //   for(let i = 0; i < n; i+=1) {\n  //     dispatch({type:\"remove\", value: 0});\n  //     console.log(myArray.length);\n  //   }\n  // }\n  // useEffect(() => {\n  //   setMyarray({myArray:[]});\n  //   addList();\n  //     else if (page2 === -2 && i < recipeInfo.length) {\n  //       dispatch({type:\"add\", value: recipeInfo[i]});\n  //     }\n  // }, [page]); \n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, b.map(recipe => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      backgroundColor: \"#9E4244\",\n      height: 300,\n      border: \"2px solid #B6666F\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      backgroundColor: \"#9E4244\",\n      margin: \"2.9%\",\n      marginTop: \"2.0%\",\n      border: \"6px solid #B6666F\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    alt: \"complex\",\n    src: recipe.RecipePhoto,\n    style: {\n      width: \"100%\",\n      height: 226,\n      objectFit: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    sm: true,\n    container: true,\n    style: {\n      backgroundColor: \"white\",\n      height: \"100%\",\n      width: \"100%\",\n      backgroundImage: `url(${image0})`,\n      backgroundSize: \"100% 100%\",\n      backgroundRepeat: \"no-repeat\",\n      borderLeft: \"4px solid #B6666F\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 0,\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    style: {\n      marginLeft: \"11%\",\n      marginTop: \"7%\",\n      color: \"white\",\n      fontFamily: \"Patua One\",\n      fontSize: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, recipe.RecipeName), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, \"Post By\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, recipe.Author)), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    style: {\n      marginLeft: \"9%\",\n      color: \"white\",\n      fontFamily: \"Patua One\",\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"18px\",\n      marginLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, \"Keywords:\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, recipe.keyword)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    style: {\n      marginLeft: \"9%\",\n      color: \"white\",\n      fontFamily: \"Patua One\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"18px\",\n      marginLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"18px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, \"Time:\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, recipe.TotalTime), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, \"min\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"body2\",\n    style: {\n      marginLeft: \"70%\",\n      marginBottom: \"100%\",\n      color: \"#E4C2C1\",\n      cursor: 'pointer',\n      fontFamily: \"Patua One\",\n      fontSize: \"18px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, \"Learn More\"))))))), /*#__PURE__*/React.createElement(Pagination, {\n    count: 3,\n    page: page,\n    onChange: handlePageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(RecipeList, \"DbhJ5WgbTCoyygiCclm9Gs69PEo=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecipeList;\nRecipeList.propTypes = {\n  recipeInfo: PropTypes.arrayOf(PropTypes.shape({\n    keyword: PropTypes.string.isRequired,\n    Author: PropTypes.string.isRequired,\n    Directions: PropTypes.string.isRequired,\n    Ingredients: PropTypes.string.isRequired,\n    RecipeName: PropTypes.string.isRequired,\n    RecipePhoto: PropTypes.string.isRequired,\n    RecipeID: PropTypes.number.isRequired,\n    TotalTime: PropTypes.string.isRequired\n  })),\n  initialArray: PropTypes.arrayOf(PropTypes.shape({\n    keyword: PropTypes.string.isRequired,\n    Author: PropTypes.string.isRequired,\n    Directions: PropTypes.string.isRequired,\n    Ingredients: PropTypes.string.isRequired,\n    RecipeName: PropTypes.string.isRequired,\n    RecipePhoto: PropTypes.string.isRequired,\n    RecipeID: PropTypes.number.isRequired,\n    TotalTime: PropTypes.string.isRequired\n  }))\n};\nRecipeList.defaultProps = {\n  recipeInfo: []\n};\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["C:/Users/lepan/Desktop/CIS550-Project/final project/client/src/components/RecipeList.js"],"names":["React","useEffect","useState","useReducer","useLayoutEffect","useRef","makeStyles","Grid","Paper","Typography","Pagination","ButtonBase","Button","PropTypes","image0","useStyles","theme","root","width","paper","padding","spacing","margin","maxWidth","image","height","img","display","maxHeight","RecipeList","props","classes","recipeInfo","initialArray","console","log","page","setPage","b","Array","from","Object","create","updatenum","setnum","num","handlePageChange","event","value","slice","map","recipe","marginTop","backgroundColor","border","RecipePhoto","objectFit","backgroundImage","backgroundSize","backgroundRepeat","borderLeft","marginLeft","color","fontFamily","fontSize","RecipeName","Author","keyword","TotalTime","marginBottom","cursor","propTypes","arrayOf","shape","string","isRequired","Directions","Ingredients","RecipeID","number","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { useEffect, useState, useReducer, useLayoutEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport image0 from \"../images/Picture5.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%'\r\n\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\n\r\nfunction RecipeList(props) {\r\n  const classes = useStyles();\r\n  const {recipeInfo, initialArray} = props;\r\n  console.log(recipeInfo);\r\n  const [page, setPage] = useState(1);\r\n  let b = Array.from(Object.create(initialArray));\r\n  console.log(\"b\", b);\r\n  // const [myarray, setMyarray] = useState(b);\r\n  // console.log(\"myarray: \", myarray);\r\n  const updatenum = () => setnum((num) => num + 1);\r\n  const [num, setnum] = useState(0);\r\n  // const prevPage2 = useRef(0);\r\n  // const initial = [];\r\n  // for(let i = 0; i < 5; i+=1) {\r\n  //   if((page.page-1)*5+i < recipeInfo.length){\r\n  //     initial.push(recipeInfo[(page.page-1)*5+i]);\r\n  //   }\r\n  // }\r\n  // console.log(initial);\r\n  // const handleChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  // console.log(typeof myarray);\r\n\r\n  // const [myArray, dispatch] = useReducer((myArray2, { type, value }) => {\r\n  //   switch (type) {\r\n  //     case \"add\":\r\n  //       return [...myArray2, value];\r\n  //     case \"remove\":\r\n  //       return myArray2.filter((_, index) => index === 0);\r\n  //     default:\r\n  //       return myArray2;\r\n  //   }\r\n  // }, []);\r\n\r\n\r\n \r\n\r\n  // const addList = () => {\r\n  //    for(let i = 0; i < 5; i+=1) {\r\n  //      if((page.page-1)*5+i < recipeInfo.length){\r\n  //       setMyarray(array => [...array, recipeInfo[(page.page-1)*5+i]]);\r\n  //      } \r\n  //    }\r\n  // }\r\n\r\n\r\n  const handlePageChange = (event, value) => { \r\n    // setMyarray(\r\n    //   recipeInfo.slice((value-1)*5, (value-1)*5+5)\r\n    // );\r\n    b = recipeInfo.slice((value-1)*5, (value-1)*5+5);\r\n    updatenum();\r\n    setPage(\r\n      value\r\n    );\r\n  };\r\n\r\n  // const initialChange = () => {\r\n  //   for(let i = 0; i < 5; i+=1) {\r\n  //     if(page.page === 0 && (page.page-1)*5+i < recipeInfo.length){\r\n  //       dispatch({type:\"add\", value: recipeInfo[(page.page-1)*5+i]});\r\n  //     }d\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(page2, \"page2Value\");\r\n  //   if(firstUpdate.current && page2 === -2) {\r\n  //     setPage({\r\n  //       page: 1\r\n  //     });\r\n  //     firstUpdate.current = false;\r\n  //     // prevPage2.current = page2;\r\n  //     console.log(\"en\");\r\n  //   } \r\n    // else if (page2 !==  prevPage2.current) {\r\n    //   prevPage2.current = page2;\r\n    //   setPage({\r\n    //     page: 1\r\n    //   });\r\n    // }\r\n  // })\r\n  \r\n  // const cleanup = () => {\r\n  //   const n = myArray.length;\r\n  //   for(let i = 0; i < n; i+=1) {\r\n  //     dispatch({type:\"remove\", value: 0});\r\n  //     console.log(myArray.length);\r\n  //   }\r\n  // }\r\n\r\n\r\n  // useEffect(() => {\r\n  //   setMyarray({myArray:[]});\r\n  //   addList();\r\n  //     else if (page2 === -2 && i < recipeInfo.length) {\r\n  //       dispatch({type:\"add\", value: recipeInfo[i]});\r\n  //     }\r\n  // }, [page]); \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {b.map((recipe) => ( \r\n        <div style={{marginTop:0}}>\r\n          <Grid container spacing={0} style={{backgroundColor:\"#9E4244\", height:300, border: \"2px solid #B6666F\"}}>\r\n            <Grid item xs={3} style={{backgroundColor:\"#9E4244\", margin:\"2.9%\", marginTop:\"2.0%\", border: \"6px solid #B6666F\"}}>\r\n              {/* <ButtonBase className={classes.image} style={{width:350, height:226, marginTop:33}}> */}\r\n              <img className={classes.img} alt=\"complex\" src={recipe.RecipePhoto} style={{width:\"100%\", height:226, objectFit:\"cover\"}} />\r\n              {/* </ButtonBase> */}\r\n            </Grid>\r\n            <Grid item xs={9} sm container style={{backgroundColor:\"white\", height:\"100%\", width:\"100%\", backgroundImage:`url(${image0})`, backgroundSize:\"100% 100%\", backgroundRepeat:\"no-repeat\", borderLeft: \"4px solid #B6666F\"}}>\r\n              <Grid item xs container direction=\"column\" spacing={0} style={{}}>\r\n                <Grid item xs>\r\n                  <Typography gutterBottom variant=\"subtitle1\" style={{marginLeft:\"11%\", marginTop:\"7%\", color:\"white\", fontFamily:\"Patua One\", fontSize:\"25px\"}}>\r\n                    <span> \r\n                      {recipe.RecipeName} \r\n                    </span>\r\n                    <span style={{fontSize:\"15px\", marginLeft:\"2%\"}}>Post By</span>\r\n                    <span style={{fontSize:\"15px\", marginLeft:\"0.5%\"}}>{recipe.Author}</span>\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"subtitle1\" style={{marginLeft:\"9%\", color:\"white\", fontFamily:\"Patua One\", fontSize:\"15px\"}}>\r\n                    <span style={{fontSize:\"18px\", marginLeft:\"2%\"}}>Keywords:</span>\r\n                    <span style={{fontSize:\"15px\", marginLeft:\"0.5%\"}}>{recipe.keyword}</span>\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" style={{marginLeft:\"9%\", color:\"white\", fontFamily:\"Patua One\"}}>\r\n                    <span style={{fontSize:\"18px\", marginLeft:\"2%\"}}>Total</span>\r\n                    <span style={{fontSize:\"18px\", marginLeft:\"0.5%\"}}>Time:</span>\r\n                    <span style={{fontSize:\"15px\", marginLeft:\"0.5%\"}}>{recipe.TotalTime}</span>\r\n                    <span style={{fontSize:\"15px\", marginLeft:\"0.5%\"}}>min</span>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"body2\" style={{marginLeft:\"70%\", marginBottom:\"100%\", color:\"#E4C2C1\", cursor: 'pointer', fontFamily:\"Patua One\", fontSize:\"18px\"}}>\r\n                    Learn More\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>   \r\n        </div>\r\n      ))}\r\n      <Pagination count={3} page={page} onChange={handlePageChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nRecipeList.propTypes = {\r\n    recipeInfo: PropTypes.arrayOf(\r\n        PropTypes.shape({ \r\n            keyword: PropTypes.string.isRequired,\r\n            Author: PropTypes.string.isRequired,\r\n            Directions: PropTypes.string.isRequired,\r\n            Ingredients: PropTypes.string.isRequired,\r\n            RecipeName: PropTypes.string.isRequired,\r\n            RecipePhoto: PropTypes.string.isRequired,\r\n            RecipeID: PropTypes.number.isRequired,\r\n            TotalTime: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n    initialArray:  PropTypes.arrayOf(\r\n      PropTypes.shape({ \r\n          keyword: PropTypes.string.isRequired,\r\n          Author: PropTypes.string.isRequired,\r\n          Directions: PropTypes.string.isRequired,\r\n          Ingredients: PropTypes.string.isRequired,\r\n          RecipeName: PropTypes.string.isRequired,\r\n          RecipePhoto: PropTypes.string.isRequired,\r\n          RecipeID: PropTypes.number.isRequired,\r\n          TotalTime: PropTypes.string.isRequired,\r\n      }),\r\n  ) \r\n};\r\nRecipeList.defaultProps= {\r\n    recipeInfo:[]\r\n}\r\n\r\nexport default RecipeList;"]},"metadata":{},"sourceType":"module"}