{"ast":null,"code":"var _jsxFileName = \"/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/SingleRecipe.js\";\n\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { getSingleRecipeIngredient, getSingleRecipeInfo, getRecommendBasedonSearchedRecipeAuthorandTime, getRecommendBaseonSearchRecipeSearchedRecipeIngredients, checkfavorite } from \"./getData\";\nimport \"../style/Recipe.css\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport IngredientsTable from './IngredientsTable';\nimport PageNavbar from \"./PageNavbar\";\nimport singleRecipe1 from \"../images/SingleRecipe1.png\";\nimport backgroundRecipe from \"../images/backgroundRecipe.png\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nclass SingleRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theRecepieInfo: [],\n      ingredients: [],\n      instructionState: \"\",\n      recipeID: \"\",\n      recommendAuthorTime: [],\n      recommendBaseOnIngredient: [],\n      color: \"grey\"\n    };\n  }\n\n  componentDidMount() {\n    const queryString = window.location.search; // const recipeIDTemp = urlArray[urlArray.length - 1];\n    // const recipeID = decodeURI(recipeIDTemp);\n    // console.log(recipeID);\n\n    const urlParams = new URLSearchParams(queryString);\n    console.log(urlParams);\n    const recipeIDTemp = urlParams.get('id');\n    const author = urlParams.get('author');\n    const totaltime = urlParams.get('totaltime');\n    this.setState({\n      recipeID: recipeIDTemp\n    });\n    const name = window.localStorage.getItem('user');\n    console.log(name);\n    checkfavorite(recipeIDTemp, name).then(res => {\n      console.log(res);\n    });\n    getRecommendBasedonSearchedRecipeAuthorandTime(author, totaltime).then(res => {\n      console.log(res);\n      const set1 = new Set();\n      const recommendAuthorTimeTemp = res.map(ele => {\n        if (!set1.has(ele[\"Recipe Name\"])) {\n          set1.add(ele[\"Recipe Name\"]);\n          let link = `http://localhost:3000/learnmore/?id=${ele[\"RecipeID\"]}&author=${ele[\"Author\"]}&totaltime=${ele[\"Total_Time\"]}`;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              border: \"0px solid white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            style: {\n              backgroundColor: \"#9E4244\",\n              color: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(CardActionArea, {\n            style: {},\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(CardMedia, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: link,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            style: {\n              width: \"300px\",\n              height: \"200px\",\n              objectFit: \"cover\"\n            },\n            src: ele[\"Recipe Photo\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 23\n            }\n          }))), /*#__PURE__*/React.createElement(CardContent, {\n            style: {\n              width: \"300px\",\n              height: \"100px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            style: {\n              fontFamily: \"Patua One\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }\n          }, ele[\"Recipe Name\"])))));\n        }\n      });\n      this.setState({\n        recommendAuthorTime: recommendAuthorTimeTemp\n      });\n    });\n    getRecommendBaseonSearchRecipeSearchedRecipeIngredients(recipeIDTemp).then(res => {\n      console.log(res);\n      const set1 = new Set();\n      const recommendBaseOnIngredientTemp = res.map(ele => {\n        if (!set1.has(ele[\"RecipeName\"])) {\n          set1.add(ele[\"RecipeName\"]);\n          let link = `http://localhost:3000/learnmore/?id=${ele[\"ID\"]}&author=${ele[\"Author\"]}&totaltime=${ele[\"Total_Time\"]}`;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            style: {\n              backgroundColor: \"#9E4244\",\n              color: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(CardActionArea, {\n            style: {},\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(CardMedia, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: link,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            style: {\n              width: \"300px\",\n              height: \"200px\",\n              objectFit: \"cover\"\n            },\n            src: ele[\"RecipePhoto\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }\n          }))), /*#__PURE__*/React.createElement(CardContent, {\n            style: {\n              width: \"300px\",\n              height: \"100px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            style: {\n              fontFamily: \"Patua One\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }\n          }, ele[\"RecipeName\"])))));\n        }\n      });\n      this.setState({\n        recommendBaseOnIngredient: recommendBaseOnIngredientTemp\n      });\n    });\n    getSingleRecipeInfo(recipeIDTemp).then(res => {\n      if (res == undefined || res[0] == undefined) {\n        return;\n      }\n\n      const instruction = res[0].Directions.split(\"**\"); // console.log(instruction);\n      // backgroundImage: `url(${singleRecipe1})`\n\n      const theRecepieInfoTemp = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontFamily: \"Patua One\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: \"2px, solid, red\",\n          color: \"#FEF2F2\",\n          paddingTop: \"49px\",\n          paddingLeft: \"5%\",\n          paddingBottom: \"10px\",\n          fontSize: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }, `${res[0][\"Recipe Name\"]}`)), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        style: {\n          marginLeft: \"10px\",\n          marginTop: \"30px\",\n          backgroundSize: \"100% 100%\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          marginLeft: \"14%\",\n          marginTop: \"12px\",\n          width: \"93%\",\n          height: \"300px\",\n          borderRadius: \"10%\"\n        },\n        src: res[0][\"Recipe Photo\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"white\",\n          marginLeft: \"15%\",\n          marginTop: \"30px\",\n          fontSize: \"20px\",\n          fontFamily: \"Patua One\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, `Recipe Name: ${res[0][\"Recipe Name\"]}`), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"white\",\n          marginLeft: \"15%\",\n          fontSize: \"20px\",\n          fontFamily: \"Patua One\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }, `Author: ${res[0].Author}`)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IngredientsTable, {\n        recipeID: this.state.recipeID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }))));\n      const instructionDiv = instruction.slice(0, instruction.length - 1).map(ele => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 23\n        }\n      }, ele));\n      this.setState({\n        theRecepieInfo: theRecepieInfoTemp\n      });\n      this.setState({\n        instructionState: instructionDiv\n      });\n    });\n  }\n\n  render() {\n    const {\n      theRecepieInfo,\n      ingredients,\n      instructionState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, \"Favorite: \"), \" \", /*#__PURE__*/React.createElement(FavoriteIcon, {\n      style: {\n        color: `${this.state.color}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, theRecepieInfo), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, \"Direction:\"), /*#__PURE__*/React.createElement(\"ol\", {\n      className: \"directions\",\n      style: {\n        marginBorrom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, instructionState), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \" Recommendations based on  Same Author and Similar Cooking Time\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recommendAuthorTime\",\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, this.state.recommendAuthorTime), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, \" Recommendations base on 90% Matching Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recommendAuthorTime\",\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, this.state.recommendBaseOnIngredient)));\n  }\n\n}\n\nexport default SingleRecipe;","map":{"version":3,"sources":["/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/SingleRecipe.js"],"names":["React","Component","getSingleRecipeIngredient","getSingleRecipeInfo","getRecommendBasedonSearchedRecipeAuthorandTime","getRecommendBaseonSearchRecipeSearchedRecipeIngredients","checkfavorite","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Grid","Paper","TablePagination","TableFooter","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","IngredientsTable","PageNavbar","singleRecipe1","backgroundRecipe","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","FavoriteIcon","SingleRecipe","constructor","props","state","theRecepieInfo","ingredients","instructionState","recipeID","recommendAuthorTime","recommendBaseOnIngredient","color","componentDidMount","queryString","window","location","search","urlParams","URLSearchParams","console","log","recipeIDTemp","get","author","totaltime","setState","name","localStorage","getItem","then","res","set1","Set","recommendAuthorTimeTemp","map","ele","has","add","link","border","backgroundColor","width","height","objectFit","fontFamily","recommendBaseOnIngredientTemp","undefined","instruction","Directions","split","theRecepieInfoTemp","marginBottom","paddingTop","paddingLeft","paddingBottom","fontSize","marginLeft","marginTop","backgroundSize","backgroundRepeat","borderRadius","Author","instructionDiv","slice","length","render","marignBottom","marginBorrom"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { getSingleRecipeIngredient, getSingleRecipeInfo, getRecommendBasedonSearchedRecipeAuthorandTime, getRecommendBaseonSearchRecipeSearchedRecipeIngredients, checkfavorite } from \"./getData\";\nimport \"../style/Recipe.css\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableFooter from '@material-ui/core/TableFooter';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport IngredientsTable from './IngredientsTable';\nimport PageNavbar from \"./PageNavbar\";\nimport singleRecipe1 from \"../images/SingleRecipe1.png\";\nimport backgroundRecipe from \"../images/backgroundRecipe.png\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nclass SingleRecipe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      theRecepieInfo: [],\n      ingredients: [],\n      instructionState: \"\",\n      recipeID: \"\",\n      recommendAuthorTime: [],\n      recommendBaseOnIngredient: [],\n      color: \"grey\",\n    };\n  }\n\n  componentDidMount() {\n\n\n\n    const queryString = window.location.search;\n    // const recipeIDTemp = urlArray[urlArray.length - 1];\n    // const recipeID = decodeURI(recipeIDTemp);\n    // console.log(recipeID);\n    const urlParams = new URLSearchParams(queryString);\n    console.log(urlParams);\n    const recipeIDTemp = urlParams.get('id');\n    const author = urlParams.get('author');\n    const totaltime = urlParams.get('totaltime');\n\n    this.setState({ recipeID: recipeIDTemp });\n    const name = window.localStorage.getItem('user');\n    console.log(name);\n    checkfavorite(recipeIDTemp, name).then((res) => {\n      console.log(res);\n    })\n    getRecommendBasedonSearchedRecipeAuthorandTime(author, totaltime).then((res) => {\n      console.log(res);\n      const set1 = new Set();\n      const recommendAuthorTimeTemp = res.map((ele) => {\n        if (!set1.has(ele[\"Recipe Name\"])) {\n          set1.add(ele[\"Recipe Name\"]);\n          let link = `http://localhost:3000/learnmore/?id=${ele[\"RecipeID\"]}&author=${ele[\"Author\"]}&totaltime=${ele[\"Total_Time\"]}`\n          return (\n            <div style={{ border: \"0px solid white\" }}>\n              <Card style={{ backgroundColor: \"#9E4244\", color: \"white\" }}>\n                <CardActionArea style={{}}>\n                  <CardMedia>\n                    {/* src = \"https://images.unsplash.com/photo-1519148246701-3dc1897a7a21?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80\" */}\n                    <a href={link} >\n                      <img style={{ width: \"300px\", height: \"200px\", objectFit: \"cover\" }} src={ele[\"Recipe Photo\"]} />\n                    </a>\n                  </CardMedia>\n                  <CardContent style={{ width: \"300px\", height: \"100px\" }}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ fontFamily: \"Patua One\" }}>\n                      {ele[\"Recipe Name\"]}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n              {/* <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\", color: \"white\", fontSize: \"20px\" }}> {ele[\"Recipe Name\"]}</p>      \n            <img style={{ marginLeft: \"14%\", marginTop: \"10px\", width: \"93%\", height: \"70%\", borderRadius: \"10%\" }} src={ele[\"Recipe Photo\"]} /> */}\n            </div >\n          )\n        }\n      })\n\n      this.setState({ recommendAuthorTime: recommendAuthorTimeTemp });\n    });\n    getRecommendBaseonSearchRecipeSearchedRecipeIngredients(recipeIDTemp).then((res) => {\n      console.log(res);\n      const set1 = new Set();\n\n      const recommendBaseOnIngredientTemp = res.map((ele) => {\n        if (!set1.has(ele[\"RecipeName\"])) {\n          set1.add(ele[\"RecipeName\"]);\n          let link = `http://localhost:3000/learnmore/?id=${ele[\"ID\"]}&author=${ele[\"Author\"]}&totaltime=${ele[\"Total_Time\"]}`\n          return (\n            <div>\n              {/* <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\", color: \"white\", fontSize: \"20px\" }}> {ele[\"RecipeName\"]}</p>\n              <a href={link} >\n                <img style={{ marginLeft: \"14%\", marginTop: \"10px\", width: \"93%\", height: \"70%\", borderRadius: \"10%\", \"min-width\": \"200px\", \"min-height\": \"200px\" }} src={ele[\"RecipePhoto\"]} />\n              </a> */}\n              <Card style={{ backgroundColor: \"#9E4244\", color: \"white\" }}>\n                <CardActionArea style={{}}>\n                  <CardMedia>\n                    {/* src = \"https://images.unsplash.com/photo-1519148246701-3dc1897a7a21?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80\" */}\n                    <a href={link} >\n                      <img style={{ width: \"300px\", height: \"200px\", objectFit: \"cover\" }} src={ele[\"RecipePhoto\"]} />\n                    </a>\n                  </CardMedia>\n                  <CardContent style={{ width: \"300px\", height: \"100px\" }}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ fontFamily: \"Patua One\" }}>\n                      {ele[\"RecipeName\"]}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </div >\n          )\n        }\n      })\n\n      this.setState({ recommendBaseOnIngredient: recommendBaseOnIngredientTemp });\n\n    })\n\n\n\n    getSingleRecipeInfo(recipeIDTemp).then((res) => {\n      if (res == undefined || res[0] == undefined) {\n        return;\n      }\n      const instruction = res[0].Directions.split(\"**\");\n      // console.log(instruction);\n      // backgroundImage: `url(${singleRecipe1})`\n      const theRecepieInfoTemp = (\n        <div>\n          <div style={{ fontFamily: \"Patua One\" }}>\n            <div style={{ marginBottom: \"2px, solid, red\", color: \"#FEF2F2\", paddingTop: \"49px\", paddingLeft: \"5%\", paddingBottom: \"10px\", fontSize: \"30px\" }}>{`${res[0][\"Recipe Name\"]}`}</div>\n          </div>\n          <Grid container style={{ marginLeft: \"10px\", marginTop: \"30px\", backgroundSize: \"100% 100%\", backgroundRepeat: \"no-repeat\", width: \"100%\" }}>\n            <Grid item xs={4}>\n              <img style={{ marginLeft: \"14%\", marginTop: \"12px\", width: \"93%\", height: \"300px\", borderRadius: \"10%\" }} src={res[0][\"Recipe Photo\"]} />\n              <div style={{ color: \"white\", marginLeft: \"15%\", marginTop: \"30px\", fontSize: \"20px\", fontFamily: \"Patua One\" }}>{`Recipe Name: ${res[0][\"Recipe Name\"]}`}</div>\n              <div style={{ color: \"white\", marginLeft: \"15%\", fontSize: \"20px\", fontFamily: \"Patua One\" }}>{`Author: ${res[0].Author}`}</div>\n            </Grid>\n            <Grid item xs={8}>\n              <IngredientsTable recipeID={this.state.recipeID} />\n            </Grid>\n          </Grid>\n        </div>\n      );\n      const instructionDiv = instruction\n        .slice(0, instruction.length - 1)\n        .map((ele) => <li>{ele}</li>);\n      this.setState({ theRecepieInfo: theRecepieInfoTemp });\n      this.setState({ instructionState: instructionDiv });\n    });\n  }\n\n  render() {\n    const { theRecepieInfo, ingredients, instructionState } = this.state;\n    return (\n      <body>\n        <PageNavbar />\n        <div className=\"content\" style={{}}>\n          <p>Favorite: </p> <FavoriteIcon style={{ color: `${this.state.color}` }} />\n          <div>{theRecepieInfo}</div>\n          <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}>Direction:</p>\n          <ol className=\"directions\" style={{ marginBorrom: \"0px\" }}>{instructionState}</ol>\n          <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}> Recommendations based on  Same Author and Similar Cooking Time</p>\n          <div id=\"recommendAuthorTime\" style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}>\n            {this.state.recommendAuthorTime}\n          </div>\n          <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}> Recommendations base on 90% Matching Ingredients</p>\n          <div id=\"recommendAuthorTime\" style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}>\n            {this.state.recommendBaseOnIngredient}\n          </div>\n        </div>\n      </body >\n    );\n  }\n}\n\nexport default SingleRecipe;\n"]},"metadata":{},"sourceType":"module"}