{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lepan\\\\Desktop\\\\CIS550-Project\\\\final project\\\\client\\\\src\\\\components\\\\SingleRecipe.js\";\n\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { getSingleRecipeIngredient, getSingleRecipeInfo } from \"./getData\";\nimport \"../style/Recipe.css\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport IngredientsTable from './IngredientsTable';\nimport PageNavbar from \"./PageNavbar\";\nimport singleRecipe1 from \"../images/SingleRecipe1.png\";\nimport backgroundRecipe from \"../images/backgroundRecipe.png\";\n\nclass SingleRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theRecepieInfo: [],\n      ingredients: [],\n      instructionState: \"\",\n      recipeID: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const urlArray = window.location.href.split(\"/\");\n    const recipeIDTemp = urlArray[urlArray.length - 1];\n    const recipeID = decodeURI(recipeIDTemp);\n    this.setState({\n      recipeID: recipeID\n    });\n    console.log(recipeID);\n    this.setState({\n      theRecepie: recipeID\n    });\n    getSingleRecipeIngredient(recipeID).then(res => {\n      console.log(res[0].quantity);\n      console.log(res[0].unit);\n      console.log(res[0].ingredient);\n      console.log(res);\n      const ingrediventDiv = res.map(x => /*#__PURE__*/React.createElement(TableRow, {\n        key: x.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, x.ingredient), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, x.quantity), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, x.unit)) // <tr>\n      //   <td>{x.quantity}</td>\n      //   <td>{x.unit}</td>\n      //   <td>{x.ingredient}</td>\n      // </tr>\n      );\n      console.log(ingrediventDiv);\n      this.setState({\n        ingredients: ingrediventDiv\n      });\n    });\n    getSingleRecipeInfo(recipeID).then(res => {\n      //   console.log(res[0].RecipeID);\n      //   console.log(res[0][\"Recipe Name\"]);\n      //   console.log(res[0][\"Recipe Photo\"]);\n      //   console.log(res[0].Author);\n      //   console.log(res[0].Directions);\n      //   console.log(res[0].Prepare_Time);\n      //   console.log(res[0].Cook_Time);\n      //   console.log(res[0].Total_Time);\n      const instruction = res[0].Directions.split(\"**\");\n      console.log(instruction);\n      const theRecepieInfoTemp = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontFamily: \"Patua One\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: \"2px, solid, red\",\n          color: \"#FEF2F2\",\n          paddingTop: \"49px\",\n          paddingLeft: \"5%\",\n          paddingBottom: \"10px\",\n          fontSize: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, `${res[0][\"Recipe Name\"]}`)), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        style: {\n          marginLeft: \"10px\",\n          marginTop: \"30px\",\n          backgroundImage: `url(${singleRecipe1})`,\n          backgroundSize: \"100% 100%\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100%\",\n          height: \"410px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          marginLeft: \"15%\",\n          marginTop: \"28px\",\n          width: \"90%\",\n          height: \"70%\",\n          borderRadius: \"10%\"\n        },\n        src: res[0][\"Recipe Photo\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"white\",\n          marginLeft: \"15%\",\n          marginTop: \"30px\",\n          fontSize: \"20px\",\n          fontFamily: \"Patua One\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, `Recipe Name: ${res[0][\"Recipe Name\"]}`), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"white\",\n          marginLeft: \"15%\",\n          fontSize: \"20px\",\n          fontFamily: \"Patua One\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, `Author: ${res[0].Author}`)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IngredientsTable, {\n        recipeID: this.state.recipeID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }))));\n      const instructionDiv = instruction.slice(0, instruction.length - 1).map(ele => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, ele));\n      this.setState({\n        theRecepieInfo: theRecepieInfoTemp\n      });\n      this.setState({\n        instructionState: instructionDiv\n      });\n    });\n  }\n\n  render() {\n    const {\n      theRecepieInfo,\n      ingredients,\n      instructionState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, theRecepieInfo), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Direction:\"), /*#__PURE__*/React.createElement(\"ol\", {\n      className: \"directions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, instructionState)));\n  }\n\n}\n\nexport default SingleRecipe;","map":{"version":3,"sources":["C:/Users/lepan/Desktop/CIS550-Project/final project/client/src/components/SingleRecipe.js"],"names":["React","Component","getSingleRecipeIngredient","getSingleRecipeInfo","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Grid","Paper","TablePagination","TableFooter","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","IngredientsTable","PageNavbar","singleRecipe1","backgroundRecipe","SingleRecipe","constructor","props","state","theRecepieInfo","ingredients","instructionState","recipeID","componentDidMount","urlArray","window","location","href","split","recipeIDTemp","length","decodeURI","setState","console","log","theRecepie","then","res","quantity","unit","ingredient","ingrediventDiv","map","x","name","instruction","Directions","theRecepieInfoTemp","fontFamily","marginBottom","color","paddingTop","paddingLeft","paddingBottom","fontSize","marginLeft","marginTop","backgroundImage","backgroundSize","backgroundRepeat","width","height","borderRadius","Author","instructionDiv","slice","ele","render","marignBottom"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { Component } from \"react\";\r\nimport { getSingleRecipeIngredient, getSingleRecipeInfo } from \"./getData\";\r\nimport \"../style/Recipe.css\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport IngredientsTable from './IngredientsTable';\r\nimport PageNavbar from \"./PageNavbar\";\r\nimport singleRecipe1 from \"../images/SingleRecipe1.png\";\r\nimport backgroundRecipe from \"../images/backgroundRecipe.png\";\r\nclass SingleRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      theRecepieInfo: [],\r\n      ingredients: [],\r\n      instructionState: \"\",\r\n      recipeID: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const urlArray = window.location.href.split(\"/\");\r\n    const recipeIDTemp = urlArray[urlArray.length - 1];\r\n    const recipeID = decodeURI(recipeIDTemp);\r\n    this.setState({recipeID: recipeID});\r\n    console.log(recipeID);\r\n    this.setState({ theRecepie: recipeID });\r\n    getSingleRecipeIngredient(recipeID).then((res) => {\r\n      console.log(res[0].quantity);\r\n      console.log(res[0].unit);\r\n      console.log(res[0].ingredient);\r\n      console.log(res);\r\n      const ingrediventDiv = res.map((x) => (\r\n        <TableRow key={x.name}>\r\n          <TableCell component=\"th\" scope=\"row\">\r\n            {x.ingredient}\r\n          </TableCell>\r\n          <TableCell align=\"right\">{x.quantity}</TableCell>\r\n          <TableCell align=\"right\">{x.unit}</TableCell>\r\n        </TableRow>\r\n        // <tr>\r\n        //   <td>{x.quantity}</td>\r\n        //   <td>{x.unit}</td>\r\n        //   <td>{x.ingredient}</td>\r\n        // </tr>\r\n      ));\r\n      console.log(ingrediventDiv);\r\n      this.setState({ ingredients: ingrediventDiv });\r\n    });\r\n    getSingleRecipeInfo(recipeID).then((res) => {\r\n      //   console.log(res[0].RecipeID);\r\n      //   console.log(res[0][\"Recipe Name\"]);\r\n      //   console.log(res[0][\"Recipe Photo\"]);\r\n      //   console.log(res[0].Author);\r\n      //   console.log(res[0].Directions);\r\n      //   console.log(res[0].Prepare_Time);\r\n      //   console.log(res[0].Cook_Time);\r\n      //   console.log(res[0].Total_Time);\r\n      const instruction = res[0].Directions.split(\"**\");\r\n      console.log(instruction);\r\n      const theRecepieInfoTemp = (\r\n        <div>\r\n          <div style={{fontFamily:\"Patua One\"}}>\r\n            {/* <div>{`RecipeID: ${res[0].RecipeID}`}</div> */}\r\n            <div style={{marginBottom:\"2px, solid, red\", color:\"#FEF2F2\", paddingTop:\"49px\", paddingLeft:\"5%\", paddingBottom:\"10px\", fontSize:\"30px\"}}>{`${res[0][\"Recipe Name\"]}`}</div>\r\n          </div>\r\n          <Grid container style={{marginLeft:\"10px\", marginTop:\"30px\", backgroundImage: `url(${singleRecipe1})`, backgroundSize: \"100% 100%\", backgroundRepeat: \"no-repeat\", width:\"100%\", height:\"410px\"}}>\r\n            <Grid item xs={4}>\r\n              <img style={{marginLeft:\"15%\", marginTop:\"28px\", width: \"90%\", height: \"70%\", borderRadius: \"10%\"}} src={res[0][\"Recipe Photo\"]} />\r\n              <div style={{color:\"white\", marginLeft:\"15%\", marginTop:\"30px\",fontSize:\"20px\", fontFamily:\"Patua One\"}}>{`Recipe Name: ${res[0][\"Recipe Name\"]}`}</div>\r\n              <div style={{color:\"white\", marginLeft:\"15%\", fontSize:\"20px\", fontFamily:\"Patua One\"}}>{`Author: ${res[0].Author}`}</div>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <IngredientsTable recipeID={this.state.recipeID} />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n      const instructionDiv = instruction\r\n        .slice(0, instruction.length - 1)\r\n        .map((ele) => <li>{ele}</li>);\r\n      this.setState({ theRecepieInfo: theRecepieInfoTemp });\r\n      this.setState({ instructionState: instructionDiv });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { theRecepieInfo, ingredients, instructionState } = this.state;\r\n    return (\r\n      <body>\r\n        <PageNavbar />\r\n        <div className=\"content\" style={{}}>\r\n          <div>{theRecepieInfo}</div>\r\n          <p style={{marginTop:\"40px\", marginLeft:\"70px\", marignBottom:\"0px\"}}>Direction:</p>\r\n          <ol className=\"directions\">{instructionState}</ol>\r\n\r\n          {/* <table>\r\n            <thead>\r\n              <tr>\r\n                <th>quantity</th>\r\n                <th>unit</th>\r\n                <th>ingredient</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{ingredients}</tbody>\r\n          </table> */}\r\n\r\n          {/* <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Ingredient</TableCell>\r\n                  <TableCell align=\"right\">Unit</TableCell>\r\n                  <TableCell align=\"right\">Quantity</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {ingredients}\r\n              </TableBody>\r\n            </Table> */}\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination rowsPerPageOptions={[10, 50]} /> */}\r\n              {/* <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                colSpan={3}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              /> */}\r\n            {/* </TableRow>\r\n          </TableFooter> */}\r\n          {/* </TableContainer> */}\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleRecipe;\r\n"]},"metadata":{},"sourceType":"module"}