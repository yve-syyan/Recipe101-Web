{"ast":null,"code":"var _jsxFileName = \"/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/IngredientOption.js\";\n\n/* eslint-disable no-use-before-define */\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport { fetchIngredient } from \"./getData\";\nimport \"../style/IngredientOption.css\";\nconst useStyles = makeStyles(theme => ({\n  noOptions: {\n    background: \"#9E4244\",\n    fontFamily: \"Patua One\",\n    color: \"white\"\n  },\n  input: {\n    fontFamily: \"Patua One\",\n    color: \"white\"\n  },\n  outlineRoot: {\n    \"& .makeStyles.root\": {\n      width: 0,\n      height: 0\n    },\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"white\",\n      border: '5px solid'\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#B6666F\",\n      border: '5px solid'\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#9E4244\",\n      border: '5px solid'\n    },\n    \"& .MuiOutlinedInput-input\": {\n      color: \"white\" // borderBottom: 0\n\n    },\n    \"&:hover .MuiOutlinedInput-input\": {\n      color: \"#B6666F\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n      color: \"white\"\n    },\n    \"& .MuiInputLabel-outlined\": {\n      color: \"white\",\n      fontFamily: \"Patua One\",\n      fontSize: 17\n    },\n    \"&:hover .MuiInputLabel-outlined\": {\n      color: \"#B6666F\",\n      fontFamily: \"Patua One\",\n      fontSize: 17\n    },\n    \"& .MuiInputLabel-outlined.Mui-focused\": {\n      color: \"white\",\n      fontFamily: \"Patua One\",\n      fontSize: 17\n    }\n  }\n}));\nconst filter = createFilterOptions();\n\nconst IngredientOption = props => {\n  const [tags, setTags] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    props.onSelectIngredients(tags);\n    console.log('state changed', tags);\n  }, [tags]);\n\n  const onTagsChange = async (event, values) => {\n    values.map(async entry => {\n      entry.pic = await fetchIngredient(entry.title).then(res => res);\n      setTags({\n        tags: values\n      });\n      return entry;\n    });\n    console.log(\"tags\", tags);\n  }; // render() {\n\n\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    id: \"tags-outlined\",\n    style: {\n      color: \"white\"\n    } // id=\"tags-outlined\"\n    ,\n    options: ingredients,\n    getOptionLabel: option => option.title // defaultValue={}\n    ,\n    onChange: onTagsChange,\n    filterOptions: (options, params) => {\n      const filtered = filter(options, params); // Suggest the creation of a new value\n\n      if (params.inputValue !== '') {\n        filtered.push({\n          inputValue: params.inputValue,\n          title: `${params.inputValue}`,\n          pic: \"\"\n        });\n      }\n\n      return filtered;\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"30%\",\n        padding: 50,\n        paddingBottom: 60,\n        left: \"58.4%\",\n        top: \"53%\",\n        position: \"absolute\",\n        transform: \"translate(-50%, -50%)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      style: {\n        color: \"white\",\n        fontFamily: \"Patua One\",\n        borderBottom: 0\n      } // s\n      ,\n      label: \" Ingredients\",\n      placeholder: \"Your Ingredients\" // margin=\"none\"\n      ,\n      fullWidth: true,\n      classes: {\n        root: classes.outlineRoot\n      },\n      multiline: true // multiline=\"false\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }))),\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/React.createElement(Chip, Object.assign({\n      style: {\n        backgroundColor: \"#9E4244\",\n        color: \"white\",\n        height: 48,\n        fontFamily: \"Patua One\",\n        fontSize: 15,\n        marginTop: 10,\n        marginLeft: 10,\n        marginRight: 10\n      },\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        style: {\n          width: 45,\n          height: 43\n        },\n        alt: \"Remy Sharp\",\n        src: option.pic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 169\n        }\n      }),\n      variant: \"outlined\",\n      label: option.title\n    }, getTagProps({\n      index\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }))),\n    ListboxProps: {\n      style: {\n        backgroundColor: \"#9E4244\",\n        color: \"white\",\n        fontFamily: \"Patua One\"\n      }\n    },\n    noOptionsText: \"Type in Your Ingredients\",\n    classes: {\n      noOptions: classes.noOptions,\n      input: classes.input,\n      root: classes.root\n    },\n    limitTags: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  });\n}; // }\n\n\nIngredientOption.propTypes = {\n  onSelectIngredients: PropTypes.func.isRequired\n};\nexport default IngredientOption;\nconst ingredients = [];","map":{"version":3,"sources":["/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/IngredientOption.js"],"names":["React","useState","useEffect","Chip","Autocomplete","createFilterOptions","Avatar","makeStyles","TextField","PropTypes","fetchIngredient","useStyles","theme","noOptions","background","fontFamily","color","input","outlineRoot","width","height","borderColor","border","fontSize","filter","IngredientOption","props","tags","setTags","classes","onSelectIngredients","console","log","onTagsChange","event","values","map","entry","pic","title","then","res","ingredients","option","options","params","filtered","inputValue","push","padding","paddingBottom","left","top","position","transform","borderBottom","root","value","getTagProps","index","backgroundColor","marginTop","marginLeft","marginRight","style","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["\n/* eslint-disable no-use-before-define */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable no-unused-vars */\nimport React, {useState, useEffect} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete,{createFilterOptions} from '@material-ui/lab/Autocomplete';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport {fetchIngredient} from \"./getData\";\nimport \"../style/IngredientOption.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  noOptions: {\n    background: \"#9E4244\",\n    fontFamily: \"Patua One\",\n    color: \"white\"\n  },\n  input: {\n    fontFamily: \"Patua One\",\n    color: \"white\",\n  },\n  outlineRoot: {\n    \"& .makeStyles.root\": {\n      width:0,\n      height:0\n    },\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"white\",\n      border:'5px solid'\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#B6666F\",\n      border:'5px solid'\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#9E4244\",\n      border:'5px solid'\n    },\n    \"& .MuiOutlinedInput-input\": {\n      color: \"white\",\n      // borderBottom: 0\n    },\n    \"&:hover .MuiOutlinedInput-input\": {\n      color: \"#B6666F\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n      color: \"white\"\n    },\n    \"& .MuiInputLabel-outlined\": {\n      color: \"white\",\n      fontFamily: \"Patua One\",\n      fontSize:17\n    },\n    \"&:hover .MuiInputLabel-outlined\": {\n      color: \"#B6666F\",\n      fontFamily: \"Patua One\",\n      fontSize:17\n    },\n    \"& .MuiInputLabel-outlined.Mui-focused\": {\n      color: \"white\",\n      fontFamily: \"Patua One\",\n      fontSize:17\n    },\n  },\n\n}));\n\nconst filter = createFilterOptions();\n\n\n\nconst IngredientOption = (props) => {\n  const [tags, setTags] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    props.onSelectIngredients(tags);\n    console.log('state changed', tags);\n  }, [tags]); \n    \n  const onTagsChange = async (event, values) => {\n    values.map(async (entry) => {\n      entry.pic = await fetchIngredient(entry.title).then((res) => res);\n      setTags({\n        tags: values\n      });\n      return entry;\n    });\n    console.log(\"tags\", tags);\n  }\n  \n  // render() {\n  return (\n    <Autocomplete\n      multiple\n      id=\"tags-outlined\"\n      style={{ \n        color: \"white\"}}\n      // id=\"tags-outlined\"\n      options={ingredients}\n      getOptionLabel={option => option.title}\n      // defaultValue={}\n      onChange={onTagsChange}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n  \n        // Suggest the creation of a new value\n        if (params.inputValue !== '') {\n          filtered.push({\n            inputValue: params.inputValue,\n            title: `${params.inputValue}`,\n            pic: \"\"\n          });\n        }\n  \n        return filtered;\n      }}\n      renderInput={params => (\n        <div style={{width:\"30%\", padding:50, paddingBottom:60, left: \"58.4%\", top: \"53%\", position:\"absolute\", transform: \"translate(-50%, -50%)\"}}>\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            style={{color:\"white\",fontFamily:\"Patua One\", borderBottom: 0}}\n            // s\n            label=\" Ingredients\"\n            placeholder=\"Your Ingredients\"\n            // margin=\"none\"\n            fullWidth\n            classes={{root:classes.outlineRoot}}\n            multiline\n            // multiline=\"false\"\n          />\n        </div>\n      )}\n      renderTags={(value, getTagProps) =>\n        value.map((option, index) => (\n          <Chip style={{backgroundColor:\"#9E4244\", color:\"white\", height:48, fontFamily:\"Patua One\", fontSize:15, marginTop:10, marginLeft:10, marginRight:10}} avatar={<Avatar style={{width:45, height:43}} alt=\"Remy Sharp\" src={option.pic} />} variant=\"outlined\" label={option.title} {...getTagProps({ index })} />\n      ))}\n      ListboxProps={{style:{backgroundColor:\"#9E4244\", color:\"white\", fontFamily:\"Patua One\"}}}\n      noOptionsText=\"Type in Your Ingredients\"\n      classes={{noOptions:classes.noOptions, input:classes.input, root:classes.root}}\n      limitTags={4}\n\n    />\n  );\n}\n// }\nIngredientOption.propTypes = {\n  onSelectIngredients: PropTypes.func.isRequired,\n};\n\nexport default IngredientOption;\nconst ingredients = [\n];\n"]},"metadata":{},"sourceType":"module"}