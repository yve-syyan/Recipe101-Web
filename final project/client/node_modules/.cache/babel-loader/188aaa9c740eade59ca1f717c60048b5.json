{"ast":null,"code":"var _jsxFileName = \"/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/SingleRecipe.js\";\n\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { getSingleRecipeIngredient, getSingleRecipeInfo, getRecommendBasedonSearchedRecipeAuthorandTime } from \"./getData\";\nimport \"../style/Recipe.css\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport IngredientsTable from './IngredientsTable';\nimport PageNavbar from \"./PageNavbar\";\nimport singleRecipe1 from \"../images/SingleRecipe1.png\";\nimport backgroundRecipe from \"../images/backgroundRecipe.png\";\n\nclass SingleRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theRecepieInfo: [],\n      ingredients: [],\n      instructionState: \"\",\n      recipeID: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const queryString = window.location.search; // const recipeIDTemp = urlArray[urlArray.length - 1];\n    // const recipeID = decodeURI(recipeIDTemp);\n    // console.log(recipeID);\n\n    const urlParams = new URLSearchParams(queryString);\n    console.log(urlParams);\n    const recipeIDTemp = urlParams.get('id');\n    const author = urlParams.get('author');\n    const totaltime = urlParams.get('totaltime'); // this.setState({ recipeID: recipeIDTemp });\n    // getRecommendBasedonSearchedRecipeAuthorandTime(author, totaltime);\n    // this.setState({ theRecepie: recipeID });\n    // getSingleRecipeIngredient(recipeIDTemp).then((res) => {\n    //   console.log(res[0].quantity);\n    //   console.log(res[0].unit);\n    //   console.log(res[0].ingredient);\n    //   console.log(res);\n    //   const ingrediventDiv = res.map((x) => (\n    //     <TableRow key={x.name}>\n    //       <TableCell component=\"th\" scope=\"row\">\n    //         {x.ingredient}\n    //       </TableCell>\n    //       <TableCell align=\"right\">{x.quantity}</TableCell>\n    //       <TableCell align=\"right\">{x.unit}</TableCell>\n    //     </TableRow>\n    //     // <tr>\n    //     //   <td>{x.quantity}</td>\n    //     //   <td>{x.unit}</td>\n    //     //   <td>{x.ingredient}</td>\n    //     // </tr>\n    //   ));\n    //   console.log(ingrediventDiv);\n    //   this.setState({ ingredients: ingrediventDiv });\n    // });\n    // getSingleRecipeInfo(recipeIDTemp).then((res) => {\n    //   //   console.log(res[0].RecipeID);\n    //   //   console.log(res[0][\"Recipe Name\"]);\n    //   //   console.log(res[0][\"Recipe Photo\"]);\n    //   //   console.log(res[0].Author);\n    //   //   console.log(res[0].Directions);\n    //   //   console.log(res[0].Prepare_Time);\n    //   //   console.log(res[0].Cook_Time);\n    //   //   console.log(res[0].Total_Time);\n    //   const instruction = res[0].Directions.split(\"**\");\n    //   console.log(instruction);\n    //   const theRecepieInfoTemp = (\n    //     <div>\n    //       <div style={{ fontFamily: \"Patua One\" }}>\n    //         {/* <div>{`RecipeID: ${res[0].RecipeID}`}</div> */}\n    //         <div style={{ marginBottom: \"2px, solid, red\", color: \"#FEF2F2\", paddingTop: \"49px\", paddingLeft: \"5%\", paddingBottom: \"10px\", fontSize: \"30px\" }}>{`${res[0][\"Recipe Name\"]}`}</div>\n    //       </div>\n    //       <Grid container style={{ marginLeft: \"10px\", marginTop: \"30px\", backgroundImage: `url(${singleRecipe1})`, backgroundSize: \"100% 100%\", backgroundRepeat: \"no-repeat\", width: \"100%\", height: \"410px\" }}>\n    //         <Grid item xs={4}>\n    //           <img style={{ marginLeft: \"14%\", marginTop: \"28px\", width: \"93%\", height: \"70%\", borderRadius: \"10%\" }} src={res[0][\"Recipe Photo\"]} />\n    //           <div style={{ color: \"white\", marginLeft: \"15%\", marginTop: \"30px\", fontSize: \"20px\", fontFamily: \"Patua One\" }}>{`Recipe Name: ${res[0][\"Recipe Name\"]}`}</div>\n    //           <div style={{ color: \"white\", marginLeft: \"15%\", fontSize: \"20px\", fontFamily: \"Patua One\" }}>{`Author: ${res[0].Author}`}</div>\n    //         </Grid>\n    //         <Grid item xs={8}>\n    //           <IngredientsTable recipeID={this.state.recipeID} />\n    //         </Grid>\n    //       </Grid>\n    //     </div>\n    //   );\n    //   const instructionDiv = instruction\n    //     .slice(0, instruction.length - 1)\n    //     .map((ele) => <li>{ele}</li>);\n    //   this.setState({ theRecepieInfo: theRecepieInfoTemp });\n    //   this.setState({ instructionState: instructionDiv });\n    // });\n  }\n\n  render() {\n    const {\n      theRecepieInfo,\n      ingredients,\n      instructionState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, theRecepieInfo), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Direction:\"), /*#__PURE__*/React.createElement(\"ol\", {\n      className: \"directions\",\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, instructionState)));\n  }\n\n}\n\nexport default SingleRecipe;","map":{"version":3,"sources":["/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/SingleRecipe.js"],"names":["React","Component","getSingleRecipeIngredient","getSingleRecipeInfo","getRecommendBasedonSearchedRecipeAuthorandTime","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Grid","Paper","TablePagination","TableFooter","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","IngredientsTable","PageNavbar","singleRecipe1","backgroundRecipe","SingleRecipe","constructor","props","state","theRecepieInfo","ingredients","instructionState","recipeID","componentDidMount","queryString","window","location","search","urlParams","URLSearchParams","console","log","recipeIDTemp","get","author","totaltime","render","marginTop","marginLeft","marignBottom"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,yBAAT,EAAoCC,mBAApC,EAAyDC,8CAAzD,QAA+G,WAA/G;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;AACA,MAAMC,YAAN,SAA2BvB,SAA3B,CAAqC;AACnCwB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,EADL;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,gBAAgB,EAAE,EAHP;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB,UAAMC,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAFkB,CAGlB;AACA;AACA;;AACA,UAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBL,WAApB,CAAlB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,UAAMI,YAAY,GAAGJ,SAAS,CAACK,GAAV,CAAc,IAAd,CAArB;AACA,UAAMC,MAAM,GAAGN,SAAS,CAACK,GAAV,CAAc,QAAd,CAAf;AACA,UAAME,SAAS,GAAGP,SAAS,CAACK,GAAV,CAAc,WAAd,CAAlB,CAVkB,CAWlB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,cAAF;AAAkBC,MAAAA,WAAlB;AAA+BC,MAAAA;AAA/B,QAAoD,KAAKH,KAA/D;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,cAAN,CADF,eAEE;AAAG,MAAA,KAAK,EAAE;AAAEkB,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,UAAU,EAAE,MAAjC;AAAyCC,QAAAA,YAAY,EAAE;AAAvD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAI,MAAA,SAAS,EAAC,YAAd;AAA2B,MAAA,KAAK,EAAE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuClB,gBAAvC,CAHF,CAFF,CADF;AAuDD;;AA/IkC;;AAkJrC,eAAeN,YAAf","sourcesContent":["/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { getSingleRecipeIngredient, getSingleRecipeInfo, getRecommendBasedonSearchedRecipeAuthorandTime } from \"./getData\";\nimport \"../style/Recipe.css\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableFooter from '@material-ui/core/TableFooter';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport IngredientsTable from './IngredientsTable';\nimport PageNavbar from \"./PageNavbar\";\nimport singleRecipe1 from \"../images/SingleRecipe1.png\";\nimport backgroundRecipe from \"../images/backgroundRecipe.png\";\nclass SingleRecipe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      theRecepieInfo: [],\n      ingredients: [],\n      instructionState: \"\",\n      recipeID: \"\"\n    };\n  }\n\n  componentDidMount() {\n\n    const queryString = window.location.search;\n    // const recipeIDTemp = urlArray[urlArray.length - 1];\n    // const recipeID = decodeURI(recipeIDTemp);\n    // console.log(recipeID);\n    const urlParams = new URLSearchParams(queryString);\n    console.log(urlParams);\n    const recipeIDTemp = urlParams.get('id');\n    const author = urlParams.get('author');\n    const totaltime = urlParams.get('totaltime');\n    // this.setState({ recipeID: recipeIDTemp });\n    // getRecommendBasedonSearchedRecipeAuthorandTime(author, totaltime);\n\n    // this.setState({ theRecepie: recipeID });\n    // getSingleRecipeIngredient(recipeIDTemp).then((res) => {\n    //   console.log(res[0].quantity);\n    //   console.log(res[0].unit);\n    //   console.log(res[0].ingredient);\n    //   console.log(res);\n    //   const ingrediventDiv = res.map((x) => (\n    //     <TableRow key={x.name}>\n    //       <TableCell component=\"th\" scope=\"row\">\n    //         {x.ingredient}\n    //       </TableCell>\n    //       <TableCell align=\"right\">{x.quantity}</TableCell>\n    //       <TableCell align=\"right\">{x.unit}</TableCell>\n    //     </TableRow>\n    //     // <tr>\n    //     //   <td>{x.quantity}</td>\n    //     //   <td>{x.unit}</td>\n    //     //   <td>{x.ingredient}</td>\n    //     // </tr>\n    //   ));\n    //   console.log(ingrediventDiv);\n    //   this.setState({ ingredients: ingrediventDiv });\n    // });\n    // getSingleRecipeInfo(recipeIDTemp).then((res) => {\n    //   //   console.log(res[0].RecipeID);\n    //   //   console.log(res[0][\"Recipe Name\"]);\n    //   //   console.log(res[0][\"Recipe Photo\"]);\n    //   //   console.log(res[0].Author);\n    //   //   console.log(res[0].Directions);\n    //   //   console.log(res[0].Prepare_Time);\n    //   //   console.log(res[0].Cook_Time);\n    //   //   console.log(res[0].Total_Time);\n    //   const instruction = res[0].Directions.split(\"**\");\n    //   console.log(instruction);\n    //   const theRecepieInfoTemp = (\n    //     <div>\n    //       <div style={{ fontFamily: \"Patua One\" }}>\n    //         {/* <div>{`RecipeID: ${res[0].RecipeID}`}</div> */}\n    //         <div style={{ marginBottom: \"2px, solid, red\", color: \"#FEF2F2\", paddingTop: \"49px\", paddingLeft: \"5%\", paddingBottom: \"10px\", fontSize: \"30px\" }}>{`${res[0][\"Recipe Name\"]}`}</div>\n    //       </div>\n    //       <Grid container style={{ marginLeft: \"10px\", marginTop: \"30px\", backgroundImage: `url(${singleRecipe1})`, backgroundSize: \"100% 100%\", backgroundRepeat: \"no-repeat\", width: \"100%\", height: \"410px\" }}>\n    //         <Grid item xs={4}>\n    //           <img style={{ marginLeft: \"14%\", marginTop: \"28px\", width: \"93%\", height: \"70%\", borderRadius: \"10%\" }} src={res[0][\"Recipe Photo\"]} />\n    //           <div style={{ color: \"white\", marginLeft: \"15%\", marginTop: \"30px\", fontSize: \"20px\", fontFamily: \"Patua One\" }}>{`Recipe Name: ${res[0][\"Recipe Name\"]}`}</div>\n    //           <div style={{ color: \"white\", marginLeft: \"15%\", fontSize: \"20px\", fontFamily: \"Patua One\" }}>{`Author: ${res[0].Author}`}</div>\n    //         </Grid>\n    //         <Grid item xs={8}>\n    //           <IngredientsTable recipeID={this.state.recipeID} />\n    //         </Grid>\n    //       </Grid>\n    //     </div>\n    //   );\n    //   const instructionDiv = instruction\n    //     .slice(0, instruction.length - 1)\n    //     .map((ele) => <li>{ele}</li>);\n    //   this.setState({ theRecepieInfo: theRecepieInfoTemp });\n    //   this.setState({ instructionState: instructionDiv });\n    // });\n  }\n\n  render() {\n    const { theRecepieInfo, ingredients, instructionState } = this.state;\n    return (\n      <body>\n        <PageNavbar />\n        <div className=\"content\" style={{}}>\n          <div>{theRecepieInfo}</div>\n          <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}>Direction:</p>\n          <ol className=\"directions\" style={{}}>{instructionState}</ol>\n\n          {/* <table>\n            <thead>\n              <tr>\n                <th>quantity</th>\n                <th>unit</th>\n                <th>ingredient</th>\n              </tr>\n            </thead>\n            <tbody>{ingredients}</tbody>\n          </table> */}\n\n          {/* <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ingredient</TableCell>\n                  <TableCell align=\"right\">Unit</TableCell>\n                  <TableCell align=\"right\">Quantity</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {ingredients}\n              </TableBody>\n            </Table> */}\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination rowsPerPageOptions={[10, 50]} /> */}\n          {/* <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              /> */}\n          {/* </TableRow>\n          </TableFooter> */}\n          {/* </TableContainer> */}\n        </div>\n      </body>\n    );\n  }\n}\n\nexport default SingleRecipe;\n"]},"metadata":{},"sourceType":"module"}