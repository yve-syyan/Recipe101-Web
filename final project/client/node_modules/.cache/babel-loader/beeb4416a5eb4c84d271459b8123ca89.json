{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule DraftEditorLeaf.react\r\n * @format\r\n * \r\n */\n'use strict';\n\nvar _assign = require('object-assign');\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DraftEditorTextNode = require('./DraftEditorTextNode.react');\n\nvar React = require('react');\n\nvar ReactDOM = require('react-dom');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar setDraftEditorSelection = require('./setDraftEditorSelection');\n/**\r\n * All leaf nodes in the editor are spans with single text nodes. Leaf\r\n * elements are styled based on the merging of an optional custom style map\r\n * and a default style map.\r\n *\r\n * `DraftEditorLeaf` also provides a wrapper for calling into the imperative\r\n * DOM Selection API. In this way, top-level components can declaratively\r\n * maintain the selection state.\r\n */\n\n\nvar DraftEditorLeaf = function (_React$Component) {\n  _inherits(DraftEditorLeaf, _React$Component);\n\n  function DraftEditorLeaf() {\n    _classCallCheck(this, DraftEditorLeaf);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  DraftEditorLeaf.prototype._setSelection = function _setSelection() {\n    var selection = this.props.selection; // If selection state is irrelevant to the parent block, no-op.\n\n    if (selection == null || !selection.getHasFocus()) {\n      return;\n    }\n\n    var _props = this.props,\n        block = _props.block,\n        start = _props.start,\n        text = _props.text;\n    var blockKey = block.getKey();\n    var end = start + text.length;\n\n    if (!selection.hasEdgeWithin(blockKey, start, end)) {\n      return;\n    } // Determine the appropriate target node for selection. If the child\n    // is not a text node, it is a <br /> spacer. In this case, use the\n    // <span> itself as the selection target.\n\n\n    var node = ReactDOM.findDOMNode(this);\n    !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing node') : invariant(false) : void 0;\n    var child = node.firstChild;\n    !child ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing child') : invariant(false) : void 0;\n    var targetNode = void 0;\n\n    if (child.nodeType === Node.TEXT_NODE) {\n      targetNode = child;\n    } else if (child.tagName === 'BR') {\n      targetNode = node;\n    } else {\n      targetNode = child.firstChild;\n      !targetNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing targetNode') : invariant(false) : void 0;\n    }\n\n    setDraftEditorSelection(selection, targetNode, blockKey, start, end);\n  };\n  /**\r\n   * By making individual leaf instances aware of their context within\r\n   * the text of the editor, we can set our selection range more\r\n   * easily than we could in the non-React world.\r\n   *\r\n   * Note that this depends on our maintaining tight control over the\r\n   * DOM structure of the DraftEditor component. If leaves had multiple\r\n   * text nodes, this would be harder.\r\n   */\n\n\n  DraftEditorLeaf.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var leafNode = ReactDOM.findDOMNode(this.leaf);\n    !leafNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing leafNode') : invariant(false) : void 0;\n    return leafNode.textContent !== nextProps.text || nextProps.styleSet !== this.props.styleSet || nextProps.forceSelection;\n  };\n\n  DraftEditorLeaf.prototype.componentDidUpdate = function componentDidUpdate() {\n    this._setSelection();\n  };\n\n  DraftEditorLeaf.prototype.componentDidMount = function componentDidMount() {\n    this._setSelection();\n  };\n\n  DraftEditorLeaf.prototype.render = function render() {\n    var _this2 = this;\n\n    var block = this.props.block;\n    var text = this.props.text; // If the leaf is at the end of its block and ends in a soft newline, append\n    // an extra line feed character. Browsers collapse trailing newline\n    // characters, which leaves the cursor in the wrong place after a\n    // shift+enter. The extra character repairs this.\n\n    if (text.endsWith('\\n') && this.props.isLast) {\n      text += '\\n';\n    }\n\n    var _props2 = this.props,\n        customStyleMap = _props2.customStyleMap,\n        customStyleFn = _props2.customStyleFn,\n        offsetKey = _props2.offsetKey,\n        styleSet = _props2.styleSet;\n    var styleObj = styleSet.reduce(function (map, styleName) {\n      var mergedStyles = {};\n      var style = customStyleMap[styleName];\n\n      if (style !== undefined && map.textDecoration !== style.textDecoration) {\n        // .trim() is necessary for IE9/10/11 and Edge\n        mergedStyles.textDecoration = [map.textDecoration, style.textDecoration].join(' ').trim();\n      }\n\n      return _assign(map, style, mergedStyles);\n    }, {});\n\n    if (customStyleFn) {\n      var newStyles = customStyleFn(styleSet, block);\n      styleObj = _assign(styleObj, newStyles);\n    }\n\n    return React.createElement('span', {\n      'data-offset-key': offsetKey,\n      ref: function ref(_ref) {\n        return _this2.leaf = _ref;\n      },\n      style: styleObj\n    }, React.createElement(DraftEditorTextNode, null, text));\n  };\n\n  return DraftEditorLeaf;\n}(React.Component);\n\nmodule.exports = DraftEditorLeaf;","map":{"version":3,"sources":["C:/Users/lepan/Desktop/CIS550-Project/final project/client/node_modules/draft-js/lib/DraftEditorLeaf.react.js"],"names":["_assign","require","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","DraftEditorTextNode","React","ReactDOM","invariant","setDraftEditorSelection","DraftEditorLeaf","_React$Component","apply","arguments","_setSelection","selection","props","getHasFocus","_props","block","start","text","blockKey","getKey","end","length","hasEdgeWithin","node","findDOMNode","process","env","NODE_ENV","child","firstChild","targetNode","nodeType","Node","TEXT_NODE","tagName","shouldComponentUpdate","nextProps","leafNode","leaf","textContent","styleSet","forceSelection","componentDidUpdate","componentDidMount","render","_this2","endsWith","isLast","_props2","customStyleMap","customStyleFn","offsetKey","styleObj","reduce","map","styleName","mergedStyles","style","undefined","textDecoration","join","trim","newStyles","createElement","ref","_ref","Component","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;AAAE,MAAI,CAACD,IAAL,EAAW;AAAE,UAAM,IAAIE,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOD,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAjD,CAAJ,GAAmEA,IAAnE,GAA0ED,IAAjF;AAAwF;;AAEhP,SAASG,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIP,SAAJ,CAAc,6DAA6D,OAAOO,UAAlF,CAAN;AAAsG;;AAACD,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,IAAIA,UAAU,CAACC,SAAvC,EAAkD;AAAEG,IAAAA,WAAW,EAAE;AAAEC,MAAAA,KAAK,EAAEN,QAAT;AAAmBO,MAAAA,UAAU,EAAE,KAA/B;AAAsCC,MAAAA,QAAQ,EAAE,IAAhD;AAAsDC,MAAAA,YAAY,EAAE;AAApE;AAAf,GAAlD,CAArB;AAAqK,MAAIR,UAAJ,EAAgBE,MAAM,CAACO,cAAP,GAAwBP,MAAM,CAACO,cAAP,CAAsBV,QAAtB,EAAgCC,UAAhC,CAAxB,GAAsED,QAAQ,CAACW,SAAT,GAAqBV,UAA3F;AAAwG;;AAE9e,IAAIW,mBAAmB,GAAGtB,OAAO,CAAC,6BAAD,CAAjC;;AACA,IAAIuB,KAAK,GAAGvB,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIwB,QAAQ,GAAGxB,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAIyB,SAAS,GAAGzB,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAI0B,uBAAuB,GAAG1B,OAAO,CAAC,2BAAD,CAArC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI2B,eAAe,GAAG,UAAUC,gBAAV,EAA4B;AAChDnB,EAAAA,SAAS,CAACkB,eAAD,EAAkBC,gBAAlB,CAAT;;AAEA,WAASD,eAAT,GAA2B;AACzB1B,IAAAA,eAAe,CAAC,IAAD,EAAO0B,eAAP,CAAf;;AAEA,WAAOtB,0BAA0B,CAAC,IAAD,EAAOuB,gBAAgB,CAACC,KAAjB,CAAuB,IAAvB,EAA6BC,SAA7B,CAAP,CAAjC;AACD;;AAEDH,EAAAA,eAAe,CAACf,SAAhB,CAA0BmB,aAA1B,GAA0C,SAASA,aAAT,GAAyB;AACjE,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B,CADiE,CAGjE;;AAEA,QAAIA,SAAS,IAAI,IAAb,IAAqB,CAACA,SAAS,CAACE,WAAV,EAA1B,EAAmD;AACjD;AACD;;AAED,QAAIC,MAAM,GAAG,KAAKF,KAAlB;AAAA,QACIG,KAAK,GAAGD,MAAM,CAACC,KADnB;AAAA,QAEIC,KAAK,GAAGF,MAAM,CAACE,KAFnB;AAAA,QAGIC,IAAI,GAAGH,MAAM,CAACG,IAHlB;AAKA,QAAIC,QAAQ,GAAGH,KAAK,CAACI,MAAN,EAAf;AACA,QAAIC,GAAG,GAAGJ,KAAK,GAAGC,IAAI,CAACI,MAAvB;;AACA,QAAI,CAACV,SAAS,CAACW,aAAV,CAAwBJ,QAAxB,EAAkCF,KAAlC,EAAyCI,GAAzC,CAAL,EAAoD;AAClD;AACD,KAlBgE,CAoBjE;AACA;AACA;;;AACA,QAAIG,IAAI,GAAGpB,QAAQ,CAACqB,WAAT,CAAqB,IAArB,CAAX;AACA,KAACD,IAAD,GAAQE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvB,SAAS,CAAC,KAAD,EAAQ,cAAR,CAAjD,GAA2EA,SAAS,CAAC,KAAD,CAA5F,GAAsG,KAAK,CAA3G;AACA,QAAIwB,KAAK,GAAGL,IAAI,CAACM,UAAjB;AACA,KAACD,KAAD,GAASH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvB,SAAS,CAAC,KAAD,EAAQ,eAAR,CAAjD,GAA4EA,SAAS,CAAC,KAAD,CAA9F,GAAwG,KAAK,CAA7G;AACA,QAAI0B,UAAU,GAAG,KAAK,CAAtB;;AAEA,QAAIF,KAAK,CAACG,QAAN,KAAmBC,IAAI,CAACC,SAA5B,EAAuC;AACrCH,MAAAA,UAAU,GAAGF,KAAb;AACD,KAFD,MAEO,IAAIA,KAAK,CAACM,OAAN,KAAkB,IAAtB,EAA4B;AACjCJ,MAAAA,UAAU,GAAGP,IAAb;AACD,KAFM,MAEA;AACLO,MAAAA,UAAU,GAAGF,KAAK,CAACC,UAAnB;AACA,OAACC,UAAD,GAAcL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvB,SAAS,CAAC,KAAD,EAAQ,oBAAR,CAAjD,GAAiFA,SAAS,CAAC,KAAD,CAAxG,GAAkH,KAAK,CAAvH;AACD;;AAEDC,IAAAA,uBAAuB,CAACM,SAAD,EAAYmB,UAAZ,EAAwBZ,QAAxB,EAAkCF,KAAlC,EAAyCI,GAAzC,CAAvB;AACD,GAvCD;AAwCA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEd,EAAAA,eAAe,CAACf,SAAhB,CAA0B4C,qBAA1B,GAAkD,SAASA,qBAAT,CAA+BC,SAA/B,EAA0C;AAC1F,QAAIC,QAAQ,GAAGlC,QAAQ,CAACqB,WAAT,CAAqB,KAAKc,IAA1B,CAAf;AACA,KAACD,QAAD,GAAYZ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvB,SAAS,CAAC,KAAD,EAAQ,kBAAR,CAAjD,GAA+EA,SAAS,CAAC,KAAD,CAApG,GAA8G,KAAK,CAAnH;AACA,WAAOiC,QAAQ,CAACE,WAAT,KAAyBH,SAAS,CAACnB,IAAnC,IAA2CmB,SAAS,CAACI,QAAV,KAAuB,KAAK5B,KAAL,CAAW4B,QAA7E,IAAyFJ,SAAS,CAACK,cAA1G;AACD,GAJD;;AAMAnC,EAAAA,eAAe,CAACf,SAAhB,CAA0BmD,kBAA1B,GAA+C,SAASA,kBAAT,GAA8B;AAC3E,SAAKhC,aAAL;AACD,GAFD;;AAIAJ,EAAAA,eAAe,CAACf,SAAhB,CAA0BoD,iBAA1B,GAA8C,SAASA,iBAAT,GAA6B;AACzE,SAAKjC,aAAL;AACD,GAFD;;AAIAJ,EAAAA,eAAe,CAACf,SAAhB,CAA0BqD,MAA1B,GAAmC,SAASA,MAAT,GAAkB;AACnD,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAI9B,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAvB;AACA,QAAIE,IAAI,GAAG,KAAKL,KAAL,CAAWK,IAAtB,CAJmD,CAMnD;AACA;AACA;AACA;;AAEA,QAAIA,IAAI,CAAC6B,QAAL,CAAc,IAAd,KAAuB,KAAKlC,KAAL,CAAWmC,MAAtC,EAA8C;AAC5C9B,MAAAA,IAAI,IAAI,IAAR;AACD;;AAED,QAAI+B,OAAO,GAAG,KAAKpC,KAAnB;AAAA,QACIqC,cAAc,GAAGD,OAAO,CAACC,cAD7B;AAAA,QAEIC,aAAa,GAAGF,OAAO,CAACE,aAF5B;AAAA,QAGIC,SAAS,GAAGH,OAAO,CAACG,SAHxB;AAAA,QAIIX,QAAQ,GAAGQ,OAAO,CAACR,QAJvB;AAMA,QAAIY,QAAQ,GAAGZ,QAAQ,CAACa,MAAT,CAAgB,UAAUC,GAAV,EAAeC,SAAf,EAA0B;AACvD,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,KAAK,GAAGR,cAAc,CAACM,SAAD,CAA1B;;AAEA,UAAIE,KAAK,KAAKC,SAAV,IAAuBJ,GAAG,CAACK,cAAJ,KAAuBF,KAAK,CAACE,cAAxD,EAAwE;AACtE;AACAH,QAAAA,YAAY,CAACG,cAAb,GAA8B,CAACL,GAAG,CAACK,cAAL,EAAqBF,KAAK,CAACE,cAA3B,EAA2CC,IAA3C,CAAgD,GAAhD,EAAqDC,IAArD,EAA9B;AACD;;AAED,aAAOnF,OAAO,CAAC4E,GAAD,EAAMG,KAAN,EAAaD,YAAb,CAAd;AACD,KAVc,EAUZ,EAVY,CAAf;;AAYA,QAAIN,aAAJ,EAAmB;AACjB,UAAIY,SAAS,GAAGZ,aAAa,CAACV,QAAD,EAAWzB,KAAX,CAA7B;AACAqC,MAAAA,QAAQ,GAAG1E,OAAO,CAAC0E,QAAD,EAAWU,SAAX,CAAlB;AACD;;AAED,WAAO5D,KAAK,CAAC6D,aAAN,CACL,MADK,EAEL;AACE,yBAAmBZ,SADrB;AAEEa,MAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,IAAb,EAAmB;AACtB,eAAOpB,MAAM,CAACP,IAAP,GAAc2B,IAArB;AACD,OAJH;AAKER,MAAAA,KAAK,EAAEL;AALT,KAFK,EAQLlD,KAAK,CAAC6D,aAAN,CACE9D,mBADF,EAEE,IAFF,EAGEgB,IAHF,CARK,CAAP;AAcD,GApDD;;AAsDA,SAAOX,eAAP;AACD,CAhIqB,CAgIpBJ,KAAK,CAACgE,SAhIc,CAAtB;;AAkIAC,MAAM,CAACC,OAAP,GAAiB9D,eAAjB","sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule DraftEditorLeaf.react\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar _assign = require('object-assign');\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\r\n\r\nvar DraftEditorTextNode = require('./DraftEditorTextNode.react');\r\nvar React = require('react');\r\nvar ReactDOM = require('react-dom');\r\n\r\nvar invariant = require('fbjs/lib/invariant');\r\nvar setDraftEditorSelection = require('./setDraftEditorSelection');\r\n\r\n/**\r\n * All leaf nodes in the editor are spans with single text nodes. Leaf\r\n * elements are styled based on the merging of an optional custom style map\r\n * and a default style map.\r\n *\r\n * `DraftEditorLeaf` also provides a wrapper for calling into the imperative\r\n * DOM Selection API. In this way, top-level components can declaratively\r\n * maintain the selection state.\r\n */\r\nvar DraftEditorLeaf = function (_React$Component) {\r\n  _inherits(DraftEditorLeaf, _React$Component);\r\n\r\n  function DraftEditorLeaf() {\r\n    _classCallCheck(this, DraftEditorLeaf);\r\n\r\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\r\n  }\r\n\r\n  DraftEditorLeaf.prototype._setSelection = function _setSelection() {\r\n    var selection = this.props.selection;\r\n\r\n    // If selection state is irrelevant to the parent block, no-op.\r\n\r\n    if (selection == null || !selection.getHasFocus()) {\r\n      return;\r\n    }\r\n\r\n    var _props = this.props,\r\n        block = _props.block,\r\n        start = _props.start,\r\n        text = _props.text;\r\n\r\n    var blockKey = block.getKey();\r\n    var end = start + text.length;\r\n    if (!selection.hasEdgeWithin(blockKey, start, end)) {\r\n      return;\r\n    }\r\n\r\n    // Determine the appropriate target node for selection. If the child\r\n    // is not a text node, it is a <br /> spacer. In this case, use the\r\n    // <span> itself as the selection target.\r\n    var node = ReactDOM.findDOMNode(this);\r\n    !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing node') : invariant(false) : void 0;\r\n    var child = node.firstChild;\r\n    !child ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing child') : invariant(false) : void 0;\r\n    var targetNode = void 0;\r\n\r\n    if (child.nodeType === Node.TEXT_NODE) {\r\n      targetNode = child;\r\n    } else if (child.tagName === 'BR') {\r\n      targetNode = node;\r\n    } else {\r\n      targetNode = child.firstChild;\r\n      !targetNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing targetNode') : invariant(false) : void 0;\r\n    }\r\n\r\n    setDraftEditorSelection(selection, targetNode, blockKey, start, end);\r\n  };\r\n  /**\r\n   * By making individual leaf instances aware of their context within\r\n   * the text of the editor, we can set our selection range more\r\n   * easily than we could in the non-React world.\r\n   *\r\n   * Note that this depends on our maintaining tight control over the\r\n   * DOM structure of the DraftEditor component. If leaves had multiple\r\n   * text nodes, this would be harder.\r\n   */\r\n\r\n  DraftEditorLeaf.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\r\n    var leafNode = ReactDOM.findDOMNode(this.leaf);\r\n    !leafNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing leafNode') : invariant(false) : void 0;\r\n    return leafNode.textContent !== nextProps.text || nextProps.styleSet !== this.props.styleSet || nextProps.forceSelection;\r\n  };\r\n\r\n  DraftEditorLeaf.prototype.componentDidUpdate = function componentDidUpdate() {\r\n    this._setSelection();\r\n  };\r\n\r\n  DraftEditorLeaf.prototype.componentDidMount = function componentDidMount() {\r\n    this._setSelection();\r\n  };\r\n\r\n  DraftEditorLeaf.prototype.render = function render() {\r\n    var _this2 = this;\r\n\r\n    var block = this.props.block;\r\n    var text = this.props.text;\r\n\r\n    // If the leaf is at the end of its block and ends in a soft newline, append\r\n    // an extra line feed character. Browsers collapse trailing newline\r\n    // characters, which leaves the cursor in the wrong place after a\r\n    // shift+enter. The extra character repairs this.\r\n\r\n    if (text.endsWith('\\n') && this.props.isLast) {\r\n      text += '\\n';\r\n    }\r\n\r\n    var _props2 = this.props,\r\n        customStyleMap = _props2.customStyleMap,\r\n        customStyleFn = _props2.customStyleFn,\r\n        offsetKey = _props2.offsetKey,\r\n        styleSet = _props2.styleSet;\r\n\r\n    var styleObj = styleSet.reduce(function (map, styleName) {\r\n      var mergedStyles = {};\r\n      var style = customStyleMap[styleName];\r\n\r\n      if (style !== undefined && map.textDecoration !== style.textDecoration) {\r\n        // .trim() is necessary for IE9/10/11 and Edge\r\n        mergedStyles.textDecoration = [map.textDecoration, style.textDecoration].join(' ').trim();\r\n      }\r\n\r\n      return _assign(map, style, mergedStyles);\r\n    }, {});\r\n\r\n    if (customStyleFn) {\r\n      var newStyles = customStyleFn(styleSet, block);\r\n      styleObj = _assign(styleObj, newStyles);\r\n    }\r\n\r\n    return React.createElement(\r\n      'span',\r\n      {\r\n        'data-offset-key': offsetKey,\r\n        ref: function ref(_ref) {\r\n          return _this2.leaf = _ref;\r\n        },\r\n        style: styleObj },\r\n      React.createElement(\r\n        DraftEditorTextNode,\r\n        null,\r\n        text\r\n      )\r\n    );\r\n  };\r\n\r\n  return DraftEditorLeaf;\r\n}(React.Component);\r\n\r\nmodule.exports = DraftEditorLeaf;"]},"metadata":{},"sourceType":"script"}