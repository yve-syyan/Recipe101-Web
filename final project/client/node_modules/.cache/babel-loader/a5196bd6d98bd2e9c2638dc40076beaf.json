{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lepan\\\\Desktop\\\\CIS550-Project\\\\final project\\\\client\\\\src\\\\components\\\\Register.js\";\n\n/* eslint-disable  */\nimport { Form, Input } from \"antd\";\nimport Button from \"@material-ui/core/Button\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flag: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateToNextPassword = this.validateToNextPassword.bind(this);\n    this.compareToFirstPassword = this.compareToFirstPassword.bind(this);\n    this.handleConfirmBlur = this.handleConfirmBlur.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      const existedErrMessage = document.getElementById(\"errorMessage\");\n\n      if (existedErrMessage != null) {\n        existedErrMessage.remove();\n      }\n\n      if (!err) {\n        // console.log('Received values of form: ', values);\n        const requestOptions = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: values.username,\n            password: values.password\n          })\n        }; // console.log(requestOptions);\n\n        fetch(\"http://localhost:8080/register\", requestOptions).then(res => {\n          console.log(res.status);\n\n          if (res.status === 200) {\n            console.log(\"Success\");\n            const theForm = document.getElementById(\"RegisterForm\");\n            theForm.remove();\n            const LinktoLogin = document.createElement(\"p\");\n            LinktoLogin.innerHTML = \"Registration was successful, Redirecting to Login Page\";\n            LinktoLogin.setAttribute(\"style\", \"font-size: 20px;\");\n            const RegisterDiv = document.getElementById(\"RegisterDiv\");\n            RegisterDiv.appendChild(LinktoLogin);\n            setTimeout(() => {\n              window.top.location = \"http://localhost:3000/login\";\n            }, 2000);\n          } else if (res.status === 400) {\n            const errorMessage = document.createElement(\"p\");\n            errorMessage.innerHTML = \"User Account Already Exist\";\n            errorMessage.setAttribute(\"id\", \"errorMessage\");\n            errorMessage.setAttribute(\"style\", \"color: red;\");\n            const RegisterDiv = document.getElementById(\"RegisterDiv\");\n            RegisterDiv.appendChild(errorMessage);\n            console.log(\"Not Successful\");\n          }\n        }).catch(() => console.log(\"Error\"));\n      }\n    });\n  }\n  /* istanbul ignore next */\n\n\n  validateToNextPassword(rule, value, callback) {\n    const {\n      form\n    } = this.props; // when the password text box has value && the flag is true(which means that we have words in confirmation password\n    // we compare\n\n    if (value.length !== 0) {\n      if (value.length < 5) {\n        callback(\"length should > 5\");\n      } else {\n        let oneDigit = true;\n        let oneCharacter = true;\n\n        for (let i = 0; i < value.length; i += 1) {\n          if (value.charAt(i) >= \"0\" && value.charAt(i) <= \"9\") {\n            oneDigit = false;\n          }\n\n          if (value.charAt(i) < \"0\" || value.charAt(i) > \"9\") {\n            oneCharacter = false;\n          }\n        }\n\n        if (oneDigit) {\n          callback(\"at least one number\");\n        }\n\n        if (oneCharacter) {\n          callback(\"Don't put all numbers\");\n        }\n\n        if (value && this.state.flag) {\n          form.validateFields([\"confirm\"], {\n            force: true\n          });\n        }\n      }\n    } else if (value && this.state.flag) {\n      form.validateFields([\"confirm\"], {\n        force: true\n      });\n    }\n\n    callback();\n  }\n  /* istanbul ignore next */\n\n\n  compareToFirstPassword(rule, value, callback) {\n    const {\n      form\n    } = this.props; // when the confirmation password has value && the value is not equal to the password\n\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Please Enter the Same Passwords!\");\n    } else {\n      callback();\n    }\n  }\n\n  handleConfirmBlur(e) {\n    const {\n      value\n    } = e.target; // get confirmation password\n\n    const p = this.state.flag;\n    this.setState({\n      flag: p || !!value\n    });\n  } // if the flag is true, flag is true, otherwise if confirmation password is not null, set the flag to true.\n\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      id: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"RegisterDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n      className: \"RegisterForm\",\n      id: \"RegisterForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, getFieldDecorator(\"username\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Username!\"\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      className: \"textbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Password\",\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }, {\n        validator: this.validateToNextPassword\n      }]\n    })( /*#__PURE__*/React.createElement(Input.Password, {\n      className: \"textbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 18\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Confirm Password\",\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, getFieldDecorator(\"confirm\", {\n      rules: [{\n        required: true,\n        message: \"Please confirm your password!\"\n      }, {\n        validator: this.compareToFirstPassword\n      }]\n    })( /*#__PURE__*/React.createElement(Input.Password, {\n      onBlur: this.handleConfirmBlur,\n      className: \"textbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"Button\",\n      color: \"secondary\",\n      variant: \"text\",\n      size: \"large\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"ResgisterSpan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"JumpLinklogin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, \" I already have an account, \"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      id: \"registerLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, \" \", \"Go to Login\"))))); // when the mouse wont focus on the textbox, active handConfirmBlur\n  }\n\n}\n\nconst Register = Form.create({\n  name: \"register\"\n})(RegistrationForm);\nexport default Register;","map":{"version":3,"sources":["C:/Users/lepan/Desktop/CIS550-Project/final project/client/src/components/Register.js"],"names":["Form","Input","Button","React","Component","Link","RegistrationForm","constructor","props","state","flag","handleSubmit","bind","validateToNextPassword","compareToFirstPassword","handleConfirmBlur","e","preventDefault","form","validateFieldsAndScroll","err","values","existedErrMessage","document","getElementById","remove","requestOptions","method","headers","body","JSON","stringify","username","password","fetch","then","res","console","log","status","theForm","LinktoLogin","createElement","innerHTML","setAttribute","RegisterDiv","appendChild","setTimeout","window","top","location","errorMessage","catch","rule","value","callback","length","oneDigit","oneCharacter","i","charAt","validateFields","force","getFieldValue","target","p","setState","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","rules","required","message","validator","Register","create","name"],"mappings":"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","sourcesContent":["/* eslint-disable  */\r\nimport { Form, Input } from \"antd\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass RegistrationForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      flag: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validateToNextPassword = this.validateToNextPassword.bind(this);\r\n    this.compareToFirstPassword = this.compareToFirstPassword.bind(this);\r\n    this.handleConfirmBlur = this.handleConfirmBlur.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      const existedErrMessage = document.getElementById(\"errorMessage\");\r\n      if (existedErrMessage != null) {\r\n        existedErrMessage.remove();\r\n      }\r\n      if (!err) {\r\n        // console.log('Received values of form: ', values);\r\n        const requestOptions = {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            username: values.username,\r\n            password: values.password,\r\n          }),\r\n        };\r\n        // console.log(requestOptions);\r\n        fetch(\"http://localhost:8080/register\", requestOptions)\r\n          .then((res) => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n              console.log(\"Success\");\r\n              const theForm = document.getElementById(\"RegisterForm\");\r\n              theForm.remove();\r\n              const LinktoLogin = document.createElement(\"p\");\r\n              LinktoLogin.innerHTML =\r\n                \"Registration was successful, Redirecting to Login Page\";\r\n              LinktoLogin.setAttribute(\"style\", \"font-size: 20px;\");\r\n              const RegisterDiv = document.getElementById(\"RegisterDiv\");\r\n              RegisterDiv.appendChild(LinktoLogin);\r\n              setTimeout(() => {\r\n                window.top.location = \"http://localhost:3000/login\";\r\n              }, 2000);\r\n            } else if (res.status === 400) {\r\n              const errorMessage = document.createElement(\"p\");\r\n              errorMessage.innerHTML = \"User Account Already Exist\";\r\n              errorMessage.setAttribute(\"id\", \"errorMessage\");\r\n              errorMessage.setAttribute(\"style\", \"color: red;\");\r\n              const RegisterDiv = document.getElementById(\"RegisterDiv\");\r\n              RegisterDiv.appendChild(errorMessage);\r\n              console.log(\"Not Successful\");\r\n            }\r\n          })\r\n          .catch(() => console.log(\"Error\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  validateToNextPassword(rule, value, callback) {\r\n    const { form } = this.props;\r\n    // when the password text box has value && the flag is true(which means that we have words in confirmation password\r\n    // we compare\r\n    if (value.length !== 0) {\r\n      if (value.length < 5) {\r\n        callback(\"length should > 5\");\r\n      } else {\r\n        let oneDigit = true;\r\n        let oneCharacter = true;\r\n        for (let i = 0; i < value.length; i += 1) {\r\n          if (value.charAt(i) >= \"0\" && value.charAt(i) <= \"9\") {\r\n            oneDigit = false;\r\n          }\r\n          if (value.charAt(i) < \"0\" || value.charAt(i) > \"9\") {\r\n            oneCharacter = false;\r\n          }\r\n        }\r\n        if (oneDigit) {\r\n          callback(\"at least one number\");\r\n        }\r\n        if (oneCharacter) {\r\n          callback(\"Don't put all numbers\");\r\n        }\r\n        if (value && this.state.flag) {\r\n          form.validateFields([\"confirm\"], { force: true });\r\n        }\r\n      }\r\n    } else if (value && this.state.flag) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  compareToFirstPassword(rule, value, callback) {\r\n    const { form } = this.props;\r\n    // when the confirmation password has value && the value is not equal to the password\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Please Enter the Same Passwords!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  handleConfirmBlur(e) {\r\n    const { value } = e.target; // get confirmation password\r\n    const p = this.state.flag;\r\n    this.setState({ flag: p || !!value });\r\n  } // if the flag is true, flag is true, otherwise if confirmation password is not null, set the flag to true.\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <header id=\"App-header\"></header>\r\n        <div id=\"RegisterDiv\">\r\n          <Form {...formItemLayout} className=\"RegisterForm\" id=\"RegisterForm\">\r\n            <Form.Item label=\"Username\">\r\n              {getFieldDecorator(\"username\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Username!\",\r\n                  },\r\n                ],\r\n              })(<Input className=\"textbox\" />)}\r\n            </Form.Item>\r\n            <Form.Item label=\"Password\" hasFeedback>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your password!\",\r\n                  },\r\n                  {\r\n                    validator: this.validateToNextPassword,\r\n                  },\r\n                ],\r\n              })(<Input.Password className=\"textbox\" />)}\r\n            </Form.Item>\r\n            <Form.Item label=\"Confirm Password\" hasFeedback>\r\n              {getFieldDecorator(\"confirm\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Please confirm your password!\",\r\n                  },\r\n                  {\r\n                    validator: this.compareToFirstPassword,\r\n                  },\r\n                ],\r\n              })(\r\n                <Input.Password\r\n                  onBlur={this.handleConfirmBlur}\r\n                  className=\"textbox\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Button\r\n              className=\"Button\"\r\n              color=\"secondary\"\r\n              variant=\"text\"\r\n              size=\"large\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              <span id=\"ResgisterSpan\">Register</span>\r\n            </Button>\r\n            <div id=\"JumpLinklogin\">\r\n              <span> I already have an account, </span>\r\n              <Link to=\"/\" id=\"registerLink\">\r\n                {\" \"}\r\n                Go to Login\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    ); // when the mouse wont focus on the textbox, active handConfirmBlur\r\n  }\r\n}\r\nconst Register = Form.create({ name: \"register\" })(RegistrationForm);\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}