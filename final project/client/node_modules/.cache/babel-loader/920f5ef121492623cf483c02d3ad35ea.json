{"ast":null,"code":"var _jsxFileName = \"/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/Login.js\";\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\n/* eslint-disable no-console */\n\n/* eslint-disable react/destructuring-assignment */\nimport Button from \"@material-ui/core/Button\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async handleSubmit(e) {\n    const {\n      handleLogin\n    } = this.props;\n    e.preventDefault();\n\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      if (document.getElementById(\"loginErrorMessage\") !== null) {\n        document.getElementById(\"loginErrorMessage\").setAttribute(\"style\", \"display: none;\");\n      }\n\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      };\n      console.log(requestOptions);\n      await fetch(\"http://localhost:8080/login\", requestOptions).then(res => {\n        console.log(res.status);\n\n        if (res.status === 200) {\n          const loginMessage = document.createElement(\"p\");\n          loginMessage.innerHTML = \"Hello!\";\n          loginMessage.setAttribute(\"id\", \"loginMessage\");\n          loginMessage.setAttribute(\"style\", \"color: green;\");\n          const login = document.getElementById(\"login\");\n          login.appendChild(loginMessage);\n          handleLogin(); // document.getElementById(\"loginMessage\").remove();\n        } else {\n          let loginErrorMessage = null;\n\n          if (document.getElementById(\"loginErrorMessage\") === null) {\n            loginErrorMessage = document.createElement(\"p\");\n            loginErrorMessage.innerHTML = \"Your username or password is incorrect\";\n            loginErrorMessage.setAttribute(\"id\", \"loginErrorMessage\");\n            loginErrorMessage.setAttribute(\"style\", \"color: red;\");\n            const login = document.getElementById(\"login\");\n            login.appendChild(loginErrorMessage);\n          } else {\n            document.getElementById(\"loginErrorMessage\").setAttribute(\"style\", \"display: inline; color: red \");\n          }\n        }\n      }).catch(() => {\n        console.log(\"Unable to connect to server\");\n      });\n    }\n  }\n\n  handleInputChange(e) {\n    e.preventDefault(); // console.log(e.target.value);\n\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      id: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"RegisterDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginMain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      id: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"fname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \"Username :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"LoginUsername\",\n      className: \"loginEle\",\n      name: \"username\",\n      value: username,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"fname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Password :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"loginPassword\",\n      className: \"loginEle\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleSubmit,\n      type: \"button\",\n      id: \"loginButton\",\n      className: \"loginEle\",\n      color: \"primary\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Login In\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"JumpLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \" Or you could \"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      id: \"loginLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \" \", \"register now!\"))));\n  }\n\n}\nLogin.propTypes = {\n  saveUserNameAndPassWord: PropTypes.func.isRequired,\n  handleLogin: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/Login.js"],"names":["Button","React","Component","Link","PropTypes","Login","constructor","props","state","username","password","handleSubmit","bind","handleInputChange","e","handleLogin","preventDefault","length","document","getElementById","setAttribute","requestOptions","method","headers","body","JSON","stringify","console","log","fetch","then","res","status","loginMessage","createElement","innerHTML","login","appendChild","loginErrorMessage","catch","setState","target","name","value","render","propTypes","saveUserNameAndPassWord","func","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-console */\n/* eslint-disable react/destructuring-assignment */\nimport Button from \"@material-ui/core/Button\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async handleSubmit(e) {\n    const { handleLogin } = this.props;\n    e.preventDefault();\n\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      if (document.getElementById(\"loginErrorMessage\") !== null) {\n        document\n          .getElementById(\"loginErrorMessage\")\n          .setAttribute(\"style\", \"display: none;\");\n      }\n\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n        }),\n      };\n\n      console.log(requestOptions);\n\n      await fetch(\"http://localhost:8080/login\", requestOptions)\n        .then((res) => {\n          console.log(res.status);\n          if (res.status === 200) {\n            const loginMessage = document.createElement(\"p\");\n            loginMessage.innerHTML = \"Hello!\";\n            loginMessage.setAttribute(\"id\", \"loginMessage\");\n            loginMessage.setAttribute(\"style\", \"color: green;\");\n            const login = document.getElementById(\"login\");\n            login.appendChild(loginMessage);\n\n            handleLogin();\n\n            // document.getElementById(\"loginMessage\").remove();\n          } else {\n            let loginErrorMessage = null;\n            if (document.getElementById(\"loginErrorMessage\") === null) {\n              loginErrorMessage = document.createElement(\"p\");\n              loginErrorMessage.innerHTML =\n                \"Your username or password is incorrect\";\n              loginErrorMessage.setAttribute(\"id\", \"loginErrorMessage\");\n              loginErrorMessage.setAttribute(\"style\", \"color: red;\");\n              const login = document.getElementById(\"login\");\n              login.appendChild(loginErrorMessage);\n            } else {\n              document\n                .getElementById(\"loginErrorMessage\")\n                .setAttribute(\"style\", \"display: inline; color: red \");\n            }\n          }\n        })\n        .catch(() => {\n          console.log(\"Unable to connect to server\");\n        });\n    }\n  }\n\n  handleInputChange(e) {\n    e.preventDefault();\n    // console.log(e.target.value);\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div>\n        <header id=\"App-header\" />\n        <div id=\"RegisterDiv\" />\n        <div className=\"loginMain\">\n          <div className=\"login\" id=\"login\">\n            <div>\n              <label htmlFor=\"fname\">Username :</label>\n              <input\n                type=\"text\"\n                id=\"LoginUsername\"\n                className=\"loginEle\"\n                name=\"username\"\n                value={username}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"fname\">Password :</label>\n\n              <input\n                type=\"password\"\n                id=\"loginPassword\"\n                className=\"loginEle\"\n                name=\"password\"\n                value={password}\n                onChange={this.handleInputChange}\n              />\n            </div>\n\n            <Button\n              onClick={this.handleSubmit}\n              type=\"button\"\n              id=\"loginButton\"\n              className=\"loginEle\"\n              color=\"primary\"\n              size=\"large\"\n            >\n              Login In\n            </Button>\n          </div>\n          <div id=\"JumpLink\">\n            <span> Or you could </span>\n            <Link to=\"/register\" id=\"loginLink\">\n              {\" \"}\n              register now!\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  saveUserNameAndPassWord: PropTypes.func.isRequired,\n  handleLogin: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}