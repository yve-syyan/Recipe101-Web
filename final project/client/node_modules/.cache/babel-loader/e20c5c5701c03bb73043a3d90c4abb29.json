{"ast":null,"code":"var _jsxFileName = \"/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/IngredientsTable.js\";\n\n/* eslint-disable*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { getSingleRecipeIngredient } from \"./getData\";\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onChangePage\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 63\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 58\n    }\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  recipeID: PropTypes.string.isRequired\n};\n\nfunction createData(name, calories, fat) {\n  return {\n    name,\n    calories,\n    fat\n  };\n}\n\nconst useStyles2 = makeStyles({\n  table: {\n    width: 700 // minWidth: 200,\n\n  },\n  \"& .MuiTableContainer-root\": {\n    width: \"80px\"\n  },\n  \"& .MuiPaper-root\": {\n    width: \"80px\"\n  }\n}); // const rows = getSingleRecipeIngredient(props.recipeID);\n\nexport default function CustomPaginationActionsTable(props) {\n  //   console.log(rows);\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([]);\n  getSingleRecipeIngredient(props.recipeID).then(res => setRows(res));\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    style: {\n      width: \"700px\",\n      marginTop: \"12px\",\n      marginLeft: \"80px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"custom pagination table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      backgroundColor: \"#9E4244\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    style: {\n      border: \"2px solid white\",\n      color: \"white\",\n      fontFamily: \"Puata One\",\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    style: {\n      border: \"2px solid white\",\n      color: \"white\",\n      fontFamily: \"Puata One\",\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    style: {\n      border: \"2px solid white\",\n      color: \"white\",\n      fontFamily: \"Puata One\",\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Unit\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      border: \"2px solid white\",\n      width: 230,\n      backgroundColor: \"#F0AB9F\",\n      color: \"white\",\n      fontFamily: \"Puata One\",\n      fontSize: \"15px\"\n    },\n    component: \"th\",\n    scope: \"row\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, row.ingredient), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      border: \"2px solid white\",\n      width: 230,\n      backgroundColor: \"#B6666F\",\n      color: \"white\",\n      fontFamily: \"Puata One\",\n      fontSize: \"15px\"\n    },\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, row.quantity), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      border: \"2px solid white\",\n      width: 230,\n      backgroundColor: \"#B6666F\",\n      color: \"white\",\n      fontFamily: \"Puata One\",\n      fontSize: \"15px\"\n    },\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, row.unit))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 43 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 8, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    style: {\n      backgroundColor: \"#9E4244\",\n      color: \"white\",\n      fontFamily: \"Puata One\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/IngredientsTable.js"],"names":["React","PropTypes","makeStyles","useTheme","Table","TableBody","TableHead","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","getSingleRecipeIngredient","useStyles1","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","number","isRequired","func","recipeID","string","createData","name","calories","fat","useStyles2","table","width","CustomPaginationActionsTable","setPage","useState","setRowsPerPage","rows","setRows","then","res","emptyRows","min","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","marginTop","backgroundColor","border","color","fontFamily","fontSize","slice","map","row","ingredient","quantity","unit","height","label","inputProps","native"],"mappings":"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","sourcesContent":["/* eslint-disable*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { getSingleRecipeIngredient } from \"./getData\";\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  recipeID: PropTypes.string.isRequired\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\nconst useStyles2 = makeStyles({\n  table: {\n    width: 700\n    // minWidth: 200,\n  },\n  \"& .MuiTableContainer-root\": {\n    width: \"80px\",\n  },\n  \"& .MuiPaper-root\": {\n    width: \"80px\",\n  }\n});\n\n// const rows = getSingleRecipeIngredient(props.recipeID);\n\nexport default function CustomPaginationActionsTable(props) {\n  //   console.log(rows);\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([]);\n\n  getSingleRecipeIngredient(props.recipeID).then((res) => setRows(res));\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper} style={{ width: \"700px\", marginTop: \"12px\", marginLeft: \"80px\" }}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableHead>\n          <TableRow style={{ backgroundColor: \"#9E4244\" }}>\n            <TableCell align=\"center\" style={{ border: \"2px solid white\", color: \"white\", fontFamily: \"Puata One\", fontSize: \"15px\" }}>Ingredients</TableCell>\n            <TableCell align=\"center\" style={{ border: \"2px solid white\", color: \"white\", fontFamily: \"Puata One\", fontSize: \"15px\" }}>Quantity</TableCell>\n            <TableCell align=\"center\" style={{ border: \"2px solid white\", color: \"white\", fontFamily: \"Puata One\", fontSize: \"15px\" }}>Unit</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n            <TableRow key={row.ingredient}>\n              <TableCell style={{ border: \"2px solid white\", width: 230, backgroundColor: \"#F0AB9F\", color: \"white\", fontFamily: \"Puata One\", fontSize: \"15px\" }} component=\"th\" scope=\"row\" align=\"center\">\n                {row.ingredient}\n              </TableCell>\n              <TableCell style={{ border: \"2px solid white\", width: 230, backgroundColor: \"#B6666F\", color: \"white\", fontFamily: \"Puata One\", fontSize: \"15px\" }} align=\"center\">\n                {row.quantity}\n              </TableCell>\n              <TableCell style={{ border: \"2px solid white\", width: 230, backgroundColor: \"#B6666F\", color: \"white\", fontFamily: \"Puata One\", fontSize: \"15px\" }} align=\"center\">\n                {row.unit}\n              </TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 43 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 8, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n              style={{ backgroundColor: \"#9E4244\", color: \"white\", fontFamily: \"Puata One\" }}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}