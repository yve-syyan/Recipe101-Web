{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lepan\\\\Desktop\\\\CIS550-Project\\\\final project\\\\client\\\\src\\\\components\\\\SingleRecipe.js\";\n\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { getSingleRecipeIngredient, getSingleRecipeInfo } from \"./getData\";\nimport \"../style/Recipe.css\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport IngredientsTable from './IngredientsTable';\nimport PageNavbar from \"./PageNavbar\";\n\nclass SingleRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theRecepieInfo: [],\n      ingredients: [],\n      instructionState: \"\",\n      recipeID: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const urlArray = window.location.href.split(\"/\");\n    const recipeIDTemp = urlArray[urlArray.length - 1];\n    const recipeID = decodeURI(recipeIDTemp);\n    this.setState({\n      recipeID: recipeID\n    });\n    console.log(recipeID);\n    this.setState({\n      theRecepie: recipeID\n    });\n    getSingleRecipeIngredient(recipeID).then(res => {\n      console.log(res[0].quantity);\n      console.log(res[0].unit);\n      console.log(res[0].ingredient);\n      console.log(res);\n      const ingrediventDiv = res.map(x => /*#__PURE__*/React.createElement(TableRow, {\n        key: x.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, x.ingredient), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, x.quantity), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, x.unit)) // <tr>\n      //   <td>{x.quantity}</td>\n      //   <td>{x.unit}</td>\n      //   <td>{x.ingredient}</td>\n      // </tr>\n      );\n      console.log(ingrediventDiv);\n      this.setState({\n        ingredients: ingrediventDiv\n      });\n    });\n    getSingleRecipeInfo(recipeID).then(res => {\n      //   console.log(res[0].RecipeID);\n      //   console.log(res[0][\"Recipe Name\"]);\n      //   console.log(res[0][\"Recipe Photo\"]);\n      //   console.log(res[0].Author);\n      //   console.log(res[0].Directions);\n      //   console.log(res[0].Prepare_Time);\n      //   console.log(res[0].Cook_Time);\n      //   console.log(res[0].Total_Time);\n      const instruction = res[0].Directions.split(\"**\");\n      console.log(instruction);\n      const theRecepieInfoTemp = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: \"50px\",\n          marginTop: \"50px\",\n          fontSize: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, `Recipe Name: ${res[0][\"Recipe Name\"]}`), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, `Author: ${res[0].Author}`), /*#__PURE__*/React.createElement(\"img\", {\n        src: res[0][\"Recipe Photo\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }));\n      const instructionDiv = instruction.slice(0, instruction.length - 1).map(ele => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }\n      }, ele));\n      this.setState({\n        theRecepieInfo: theRecepieInfoTemp\n      });\n      this.setState({\n        instructionState: instructionDiv\n      });\n    });\n  }\n\n  render() {\n    const {\n      theRecepieInfo,\n      ingredients,\n      instructionState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, theRecepieInfo), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, instructionState), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IngredientsTable, {\n      recipeID: this.state.recipeID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default SingleRecipe;","map":{"version":3,"sources":["C:/Users/lepan/Desktop/CIS550-Project/final project/client/src/components/SingleRecipe.js"],"names":["React","Component","getSingleRecipeIngredient","getSingleRecipeInfo","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","TableFooter","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","IngredientsTable","PageNavbar","SingleRecipe","constructor","props","state","theRecepieInfo","ingredients","instructionState","recipeID","componentDidMount","urlArray","window","location","href","split","recipeIDTemp","length","decodeURI","setState","console","log","theRecepie","then","res","quantity","unit","ingredient","ingrediventDiv","map","x","name","instruction","Directions","theRecepieInfoTemp","marginLeft","marginTop","fontSize","Author","instructionDiv","slice","ele","render"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { Component } from \"react\";\r\nimport { getSingleRecipeIngredient, getSingleRecipeInfo } from \"./getData\";\r\nimport \"../style/Recipe.css\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport IngredientsTable from './IngredientsTable';\r\nimport PageNavbar from \"./PageNavbar\";\r\nclass SingleRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      theRecepieInfo: [],\r\n      ingredients: [],\r\n      instructionState: \"\",\r\n      recipeID: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const urlArray = window.location.href.split(\"/\");\r\n    const recipeIDTemp = urlArray[urlArray.length - 1];\r\n    const recipeID = decodeURI(recipeIDTemp);\r\n    this.setState({recipeID: recipeID});\r\n    console.log(recipeID);\r\n    this.setState({ theRecepie: recipeID });\r\n    getSingleRecipeIngredient(recipeID).then((res) => {\r\n      console.log(res[0].quantity);\r\n      console.log(res[0].unit);\r\n      console.log(res[0].ingredient);\r\n      console.log(res);\r\n      const ingrediventDiv = res.map((x) => (\r\n        <TableRow key={x.name}>\r\n          <TableCell component=\"th\" scope=\"row\">\r\n            {x.ingredient}\r\n          </TableCell>\r\n          <TableCell align=\"right\">{x.quantity}</TableCell>\r\n          <TableCell align=\"right\">{x.unit}</TableCell>\r\n        </TableRow>\r\n        // <tr>\r\n        //   <td>{x.quantity}</td>\r\n        //   <td>{x.unit}</td>\r\n        //   <td>{x.ingredient}</td>\r\n        // </tr>\r\n      ));\r\n      console.log(ingrediventDiv);\r\n      this.setState({ ingredients: ingrediventDiv });\r\n    });\r\n    getSingleRecipeInfo(recipeID).then((res) => {\r\n      //   console.log(res[0].RecipeID);\r\n      //   console.log(res[0][\"Recipe Name\"]);\r\n      //   console.log(res[0][\"Recipe Photo\"]);\r\n      //   console.log(res[0].Author);\r\n      //   console.log(res[0].Directions);\r\n      //   console.log(res[0].Prepare_Time);\r\n      //   console.log(res[0].Cook_Time);\r\n      //   console.log(res[0].Total_Time);\r\n      const instruction = res[0].Directions.split(\"**\");\r\n      console.log(instruction);\r\n      const theRecepieInfoTemp = (\r\n        <div>\r\n          {/* <div>{`RecipeID: ${res[0].RecipeID}`}</div> */}\r\n          <div style={{marginLeft:\"50px\", marginTop:\"50px\", fontSize:\"30px\"}}>{`Recipe Name: ${res[0][\"Recipe Name\"]}`}</div>\r\n          <div>{`Author: ${res[0].Author}`}</div>\r\n          <img src={res[0][\"Recipe Photo\"]} />\r\n        </div>\r\n      );\r\n      const instructionDiv = instruction\r\n        .slice(0, instruction.length - 1)\r\n        .map((ele) => <li>{ele}</li>);\r\n      this.setState({ theRecepieInfo: theRecepieInfoTemp });\r\n      this.setState({ instructionState: instructionDiv });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { theRecepieInfo, ingredients, instructionState } = this.state;\r\n    return (\r\n      <div className=\"recipe\">\r\n        <PageNavbar />\r\n        <div>{theRecepieInfo}</div>\r\n        <ol>{instructionState}</ol>\r\n\r\n        {/* <table>\r\n          <thead>\r\n            <tr>\r\n              <th>quantity</th>\r\n              <th>unit</th>\r\n              <th>ingredient</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{ingredients}</tbody>\r\n        </table> */}\r\n\r\n        {/* <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Ingredient</TableCell>\r\n                <TableCell align=\"right\">Unit</TableCell>\r\n                <TableCell align=\"right\">Quantity</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {ingredients}\r\n            </TableBody>\r\n          </Table> */}\r\n          {/* <TableFooter>\r\n          <TableRow>\r\n            <TablePagination rowsPerPageOptions={[10, 50]} /> */}\r\n            {/* <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            /> */}\r\n          {/* </TableRow>\r\n        </TableFooter> */}\r\n        {/* </TableContainer> */}\r\n        <div>\r\n            <IngredientsTable recipeID={this.state.recipeID} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleRecipe;\r\n"]},"metadata":{},"sourceType":"module"}