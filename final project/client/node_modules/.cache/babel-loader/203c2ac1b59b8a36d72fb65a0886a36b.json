{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lepan\\\\Desktop\\\\CIS550-Project\\\\final project\\\\client\\\\src\\\\components\\\\RecipeList.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n}));\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\n\nexport default function RecipeList() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, \"ha\"); //   return (\n  // <div className={classes.root}>\n  //   <GridList className={classes.gridList} cols={2.5}>\n  //     {tileData.map((tile) => (\n  //       <GridListTile key={tile.img}>\n  //         <img src={tile.img} alt={tile.title} />\n  //         <GridListTileBar\n  //           title={tile.title}\n  //           classes={{\n  //             root: classes.titleBar,\n  //             title: classes.title,\n  //           }}\n  //           actionIcon={\n  //             <IconButton aria-label={`star ${tile.title}`}>\n  //               <StarBorderIcon className={classes.title} />\n  //             </IconButton>\n  //           }\n  //         />\n  //       </GridListTile>\n  //     ))}\n  //   </GridList>\n  // </div>\n  //   );\n}\n\n_s(RecipeList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["C:/Users/lepan/Desktop/CIS550-Project/final project/client/src/components/RecipeList.js"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","RecipeList","classes"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,GADiC;AAQvCC,EAAAA,QAAQ,EAAE;AACRP,IAAAA,QAAQ,EAAE,QADF;AAER;AACAQ,IAAAA,SAAS,EAAE;AAHH,GAR6B;AAavCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEb,KAAK,CAACO,OAAN,CAAcO,OAAd,CAAsBC;AADxB,GAbgC;AAgBvCC,EAAAA,QAAQ,EAAE;AACRR,IAAAA,UAAU,EACR;AAFM;AAhB6B,CAAZ,CAAD,CAA5B;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASS,UAAT,GAAsB;AAAA;;AACnC,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAFmC,CAGrC;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACC;;GA1BuBkB,U;UACNlB,S;;;KADMkB,U","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function RecipeList() {\r\n  const classes = useStyles();\r\n  return(<div>ha</div>);\r\n//   return (\r\n    // <div className={classes.root}>\r\n    //   <GridList className={classes.gridList} cols={2.5}>\r\n    //     {tileData.map((tile) => (\r\n    //       <GridListTile key={tile.img}>\r\n    //         <img src={tile.img} alt={tile.title} />\r\n    //         <GridListTileBar\r\n    //           title={tile.title}\r\n    //           classes={{\r\n    //             root: classes.titleBar,\r\n    //             title: classes.title,\r\n    //           }}\r\n    //           actionIcon={\r\n    //             <IconButton aria-label={`star ${tile.title}`}>\r\n    //               <StarBorderIcon className={classes.title} />\r\n    //             </IconButton>\r\n    //           }\r\n    //         />\r\n    //       </GridListTile>\r\n    //     ))}\r\n    //   </GridList>\r\n    // </div>\r\n//   );\r\n}"]},"metadata":{},"sourceType":"module"}