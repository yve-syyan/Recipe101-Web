{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lepan\\\\Desktop\\\\CIS550-Project\\\\final project\\\\client\\\\src\\\\components\\\\SingleRecipe.js\";\n\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { getSingleRecipeIngredient, getSingleRecipeInfo, getRecommendBasedonSearchedRecipeAuthorandTime, getRecommendBaseonSearchRecipeSearchedRecipeIngredients, checkfavorite, deleteFavorite, addFavorite } from \"./getData\";\nimport \"../style/Recipe.css\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport IngredientsTable from './IngredientsTable';\nimport PageNavbar from \"./PageNavbar\";\nimport singleRecipe1 from \"../images/SingleRecipe1.png\";\nimport backgroundRecipe from \"../images/backgroundRecipe.png\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\n\nclass SingleRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theRecepieInfo: [],\n      ingredients: [],\n      instructionState: \"\",\n      recipeID: \"\",\n      recommendAuthorTime: [],\n      recommendBaseOnIngredient: [],\n      color: \"black\",\n      iconState: [/*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n        style: {\n          size: \"large\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      })]\n    };\n  }\n\n  hanldeFavoriteChange() {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    console.log(urlParams);\n    const recipeIDTemp = urlParams.get('id');\n    const name = window.localStorage.getItem('user');\n\n    if (this.state.color == \"black\") {\n      this.setState({\n        color: \"red\"\n      });\n      this.setState({\n        iconState: [/*#__PURE__*/React.createElement(FavoriteIcon, {\n          style: {\n            size: \"large\",\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 35\n          }\n        })]\n      });\n      addFavorite(recipeIDTemp, name);\n    } else if (this.state.color == \"red\") {\n      this.setState({\n        color: \"black\"\n      });\n      this.setState({\n        iconState: [/*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n          style: {\n            size: \"large\",\n            color: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 35\n          }\n        })]\n      });\n      deleteFavorite(recipeIDTemp, name);\n    }\n  }\n\n  componentDidMount() {\n    const queryString = window.location.search; // const recipeIDTemp = urlArray[urlArray.length - 1];\n    // const recipeID = decodeURI(recipeIDTemp);\n    // console.log(recipeID);\n\n    const urlParams = new URLSearchParams(queryString);\n    console.log(urlParams);\n    const recipeIDTemp = urlParams.get('id');\n    const author = urlParams.get('author');\n    const totaltime = urlParams.get('totaltime');\n    this.setState({\n      recipeID: recipeIDTemp\n    });\n    const name = window.localStorage.getItem('user');\n    console.log(name);\n    checkfavorite(recipeIDTemp, name).then(res => {\n      if (res.length !== 0) {\n        this.setState({\n          color: [/*#__PURE__*/React.createElement(FavoriteIcon, {\n            style: {\n              size: \"large\",\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }\n          })]\n        });\n        this.setState({\n          color: \"red\"\n        });\n      }\n\n      ;\n    });\n    getRecommendBasedonSearchedRecipeAuthorandTime(author, totaltime).then(res => {\n      console.log(res);\n      const set1 = new Set();\n      const recommendAuthorTimeTemp = res.map(ele => {\n        if (!set1.has(ele[\"Recipe Name\"])) {\n          set1.add(ele[\"Recipe Name\"]);\n          let link = `http://localhost:3000/learnmore/?id=${ele[\"RecipeID\"]}&author=${ele[\"Author\"]}&totaltime=${ele[\"Total_Time\"]}`;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              border: \"0px solid white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            style: {\n              backgroundColor: \"#9E4244\",\n              color: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(CardActionArea, {\n            style: {},\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(CardMedia, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: link,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            style: {\n              width: \"300px\",\n              height: \"200px\",\n              objectFit: \"cover\"\n            },\n            src: ele[\"Recipe Photo\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 23\n            }\n          }))), /*#__PURE__*/React.createElement(CardContent, {\n            style: {\n              width: \"300px\",\n              height: \"100px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            style: {\n              fontFamily: \"Patua One\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }\n          }, ele[\"Recipe Name\"])))));\n        }\n      });\n      this.setState({\n        recommendAuthorTime: recommendAuthorTimeTemp\n      });\n    });\n    getRecommendBaseonSearchRecipeSearchedRecipeIngredients(recipeIDTemp).then(res => {\n      console.log(res);\n      const set1 = new Set();\n      const recommendBaseOnIngredientTemp = res.map(ele => {\n        if (!set1.has(ele[\"RecipeName\"])) {\n          set1.add(ele[\"RecipeName\"]);\n          let link = `http://localhost:3000/learnmore/?id=${ele[\"ID\"]}&author=${ele[\"Author\"]}&totaltime=${ele[\"Total_Time\"]}`;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            style: {\n              backgroundColor: \"#9E4244\",\n              color: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(CardActionArea, {\n            style: {},\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(CardMedia, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: link,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            style: {\n              width: \"300px\",\n              height: \"200px\",\n              objectFit: \"cover\"\n            },\n            src: ele[\"RecipePhoto\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 23\n            }\n          }))), /*#__PURE__*/React.createElement(CardContent, {\n            style: {\n              width: \"300px\",\n              height: \"100px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            style: {\n              fontFamily: \"Patua One\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }\n          }, ele[\"RecipeName\"])))));\n        }\n      });\n      this.setState({\n        recommendBaseOnIngredient: recommendBaseOnIngredientTemp\n      });\n    });\n    getSingleRecipeInfo(recipeIDTemp).then(res => {\n      if (res == undefined || res[0] == undefined) {\n        return;\n      }\n\n      const instruction = res[0].Directions.split(\"**\"); // console.log(instruction);\n      // backgroundImage: `url(${singleRecipe1})`\n\n      const theRecepieInfoTemp = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontFamily: \"Patua One\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: \"2px, solid, red\",\n          color: \"#FEF2F2\",\n          paddingTop: \"49px\",\n          paddingLeft: \"5%\",\n          paddingBottom: \"10px\",\n          fontSize: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }\n      }, `${res[0][\"Recipe Name\"]}`)), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        style: {\n          marginLeft: \"10px\",\n          marginTop: \"30px\",\n          backgroundSize: \"100% 100%\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          marginLeft: \"14%\",\n          marginTop: \"12px\",\n          width: \"93%\",\n          height: \"300px\",\n          borderRadius: \"10%\"\n        },\n        src: res[0][\"Recipe Photo\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"white\",\n          marginLeft: \"15%\",\n          marginTop: \"30px\",\n          fontSize: \"20px\",\n          fontFamily: \"Patua One\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }, `Recipe Name: ${res[0][\"Recipe Name\"]}`), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"white\",\n          marginLeft: \"15%\",\n          fontSize: \"20px\",\n          fontFamily: \"Patua One\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, `Author: ${res[0].Author}`)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IngredientsTable, {\n        recipeID: this.state.recipeID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }\n      }))));\n      const instructionDiv = instruction.slice(0, instruction.length - 1).map(ele => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 23\n        }\n      }, ele));\n      this.setState({\n        theRecepieInfo: theRecepieInfoTemp\n      });\n      this.setState({\n        instructionState: instructionDiv\n      });\n    });\n  }\n\n  render() {\n    const {\n      theRecepieInfo,\n      ingredients,\n      instructionState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, \"Favorite: \"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        backgroundColor: \"transparent\",\n        border: \"0px solid transparent\"\n      },\n      onClick: () => {\n        this.hanldeFavoriteChange();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, this.state.iconState), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, theRecepieInfo), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, \"Direction:\"), /*#__PURE__*/React.createElement(\"ol\", {\n      className: \"directions\",\n      style: {\n        marginBorrom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, instructionState), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, \" Recommendations based on  Same Author and Similar Cooking Time\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recommendAuthorTime\",\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, this.state.recommendAuthorTime), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, \" Recommendations base on 90% Matching Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recommendAuthorTime\",\n      style: {\n        marginTop: \"40px\",\n        marginLeft: \"70px\",\n        marignBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, this.state.recommendBaseOnIngredient)));\n  }\n\n}\n\nexport default SingleRecipe;","map":{"version":3,"sources":["C:/Users/lepan/Desktop/CIS550-Project/final project/client/src/components/SingleRecipe.js"],"names":["React","Component","getSingleRecipeIngredient","getSingleRecipeInfo","getRecommendBasedonSearchedRecipeAuthorandTime","getRecommendBaseonSearchRecipeSearchedRecipeIngredients","checkfavorite","deleteFavorite","addFavorite","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Grid","Paper","TablePagination","TableFooter","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","IngredientsTable","PageNavbar","singleRecipe1","backgroundRecipe","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","FavoriteIcon","FavoriteBorderOutlinedIcon","SingleRecipe","constructor","props","state","theRecepieInfo","ingredients","instructionState","recipeID","recommendAuthorTime","recommendBaseOnIngredient","color","iconState","size","hanldeFavoriteChange","queryString","window","location","search","urlParams","URLSearchParams","console","log","recipeIDTemp","get","name","localStorage","getItem","setState","componentDidMount","author","totaltime","then","res","length","set1","Set","recommendAuthorTimeTemp","map","ele","has","add","link","border","backgroundColor","width","height","objectFit","fontFamily","recommendBaseOnIngredientTemp","undefined","instruction","Directions","split","theRecepieInfoTemp","marginBottom","paddingTop","paddingLeft","paddingBottom","fontSize","marginLeft","marginTop","backgroundSize","backgroundRepeat","borderRadius","Author","instructionDiv","slice","render","marignBottom","marginBorrom"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  getSingleRecipeIngredient,\r\n  getSingleRecipeInfo,\r\n  getRecommendBasedonSearchedRecipeAuthorandTime,\r\n  getRecommendBaseonSearchRecipeSearchedRecipeIngredients,\r\n  checkfavorite,\r\n  deleteFavorite,\r\n  addFavorite\r\n} from \"./getData\";\r\n\r\nimport \"../style/Recipe.css\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport IngredientsTable from './IngredientsTable';\r\nimport PageNavbar from \"./PageNavbar\";\r\nimport singleRecipe1 from \"../images/SingleRecipe1.png\";\r\nimport backgroundRecipe from \"../images/backgroundRecipe.png\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nclass SingleRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      theRecepieInfo: [],\r\n      ingredients: [],\r\n      instructionState: \"\",\r\n      recipeID: \"\",\r\n      recommendAuthorTime: [],\r\n      recommendBaseOnIngredient: [],\r\n      color: \"black\",\r\n      iconState: [<FavoriteBorderOutlinedIcon style={{size:\"large\", color: \"white\" }} />]\r\n    };\r\n  }\r\n  hanldeFavoriteChange() {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    console.log(urlParams);\r\n    const recipeIDTemp = urlParams.get('id');\r\n    const name = window.localStorage.getItem('user');\r\n    if (this.state.color == \"black\") {\r\n      this.setState({ color: \"red\" })\r\n      this.setState({ iconState: [<FavoriteIcon style={{size:\"large\", color: \"red\" }} />]})\r\n      addFavorite(recipeIDTemp, name);\r\n    } else if (this.state.color == \"red\") {\r\n      this.setState({ color: \"black\" })\r\n      this.setState({ iconState: [<FavoriteBorderOutlinedIcon style={{size:\"large\", color: \"white\" }} />]})\r\n      deleteFavorite(recipeIDTemp, name);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const queryString = window.location.search;\r\n    // const recipeIDTemp = urlArray[urlArray.length - 1];\r\n    // const recipeID = decodeURI(recipeIDTemp);\r\n    // console.log(recipeID);\r\n    const urlParams = new URLSearchParams(queryString);\r\n    console.log(urlParams);\r\n    const recipeIDTemp = urlParams.get('id');\r\n    const author = urlParams.get('author');\r\n    const totaltime = urlParams.get('totaltime');\r\n\r\n    this.setState({ recipeID: recipeIDTemp });\r\n    const name = window.localStorage.getItem('user');\r\n    console.log(name);\r\n    checkfavorite(recipeIDTemp, name).then((res) => {\r\n      if (res.length !== 0) {\r\n        this.setState({ color: [<FavoriteIcon style={{size:\"large\", color: \"red\" }} />]});\r\n        this.setState({ color: \"red\" });\r\n      };\r\n    })\r\n    getRecommendBasedonSearchedRecipeAuthorandTime(author, totaltime).then((res) => {\r\n      console.log(res);\r\n      const set1 = new Set();\r\n      const recommendAuthorTimeTemp = res.map((ele) => {\r\n        if (!set1.has(ele[\"Recipe Name\"])) {\r\n          set1.add(ele[\"Recipe Name\"]);\r\n          let link = `http://localhost:3000/learnmore/?id=${ele[\"RecipeID\"]}&author=${ele[\"Author\"]}&totaltime=${ele[\"Total_Time\"]}`\r\n          return (\r\n            <div style={{ border: \"0px solid white\" }}>\r\n              <Card style={{ backgroundColor: \"#9E4244\", color: \"white\" }}>\r\n                <CardActionArea style={{}}>\r\n                  <CardMedia>\r\n                    {/* src = \"https://images.unsplash.com/photo-1519148246701-3dc1897a7a21?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80\" */}\r\n                    <a href={link} >\r\n                      <img style={{ width: \"300px\", height: \"200px\", objectFit: \"cover\" }} src={ele[\"Recipe Photo\"]} />\r\n                    </a>\r\n                  </CardMedia>\r\n                  <CardContent style={{ width: \"300px\", height: \"100px\" }}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ fontFamily: \"Patua One\" }}>\r\n                      {ele[\"Recipe Name\"]}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n              {/* <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\", color: \"white\", fontSize: \"20px\" }}> {ele[\"Recipe Name\"]}</p>      \r\n            <img style={{ marginLeft: \"14%\", marginTop: \"10px\", width: \"93%\", height: \"70%\", borderRadius: \"10%\" }} src={ele[\"Recipe Photo\"]} /> */}\r\n            </div >\r\n          )\r\n        }\r\n      })\r\n\r\n      this.setState({ recommendAuthorTime: recommendAuthorTimeTemp });\r\n    });\r\n    getRecommendBaseonSearchRecipeSearchedRecipeIngredients(recipeIDTemp).then((res) => {\r\n      console.log(res);\r\n      const set1 = new Set();\r\n\r\n      const recommendBaseOnIngredientTemp = res.map((ele) => {\r\n        if (!set1.has(ele[\"RecipeName\"])) {\r\n          set1.add(ele[\"RecipeName\"]);\r\n          let link = `http://localhost:3000/learnmore/?id=${ele[\"ID\"]}&author=${ele[\"Author\"]}&totaltime=${ele[\"Total_Time\"]}`\r\n          return (\r\n            <div>\r\n              {/* <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\", color: \"white\", fontSize: \"20px\" }}> {ele[\"RecipeName\"]}</p>\r\n              <a href={link} >\r\n                <img style={{ marginLeft: \"14%\", marginTop: \"10px\", width: \"93%\", height: \"70%\", borderRadius: \"10%\", \"min-width\": \"200px\", \"min-height\": \"200px\" }} src={ele[\"RecipePhoto\"]} />\r\n              </a> */}\r\n              <Card style={{ backgroundColor: \"#9E4244\", color: \"white\" }}>\r\n                <CardActionArea style={{}}>\r\n                  <CardMedia>\r\n                    {/* src = \"https://images.unsplash.com/photo-1519148246701-3dc1897a7a21?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1868&q=80\" */}\r\n                    <a href={link} >\r\n                      <img style={{ width: \"300px\", height: \"200px\", objectFit: \"cover\" }} src={ele[\"RecipePhoto\"]} />\r\n                    </a>\r\n                  </CardMedia>\r\n                  <CardContent style={{ width: \"300px\", height: \"100px\" }}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ fontFamily: \"Patua One\" }}>\r\n                      {ele[\"RecipeName\"]}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </div >\r\n          )\r\n        }\r\n      })\r\n\r\n      this.setState({ recommendBaseOnIngredient: recommendBaseOnIngredientTemp });\r\n\r\n    })\r\n\r\n\r\n\r\n    getSingleRecipeInfo(recipeIDTemp).then((res) => {\r\n      if (res == undefined || res[0] == undefined) {\r\n        return;\r\n      }\r\n      const instruction = res[0].Directions.split(\"**\");\r\n      // console.log(instruction);\r\n      // backgroundImage: `url(${singleRecipe1})`\r\n      const theRecepieInfoTemp = (\r\n        <div>\r\n          <div style={{ fontFamily: \"Patua One\" }}>\r\n            <div style={{ marginBottom: \"2px, solid, red\", color: \"#FEF2F2\", paddingTop: \"49px\", paddingLeft: \"5%\", paddingBottom: \"10px\", fontSize: \"30px\" }}>{`${res[0][\"Recipe Name\"]}`}</div>\r\n          </div>\r\n          <Grid container style={{ marginLeft: \"10px\", marginTop: \"30px\", backgroundSize: \"100% 100%\", backgroundRepeat: \"no-repeat\", width: \"100%\" }}>\r\n            <Grid item xs={4}>\r\n              <img style={{ marginLeft: \"14%\", marginTop: \"12px\", width: \"93%\", height: \"300px\", borderRadius: \"10%\" }} src={res[0][\"Recipe Photo\"]} />\r\n              <div style={{ color: \"white\", marginLeft: \"15%\", marginTop: \"30px\", fontSize: \"20px\", fontFamily: \"Patua One\" }}>{`Recipe Name: ${res[0][\"Recipe Name\"]}`}</div>\r\n              <div style={{ color: \"white\", marginLeft: \"15%\", fontSize: \"20px\", fontFamily: \"Patua One\" }}>{`Author: ${res[0].Author}`}</div>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <IngredientsTable recipeID={this.state.recipeID} />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n      const instructionDiv = instruction\r\n        .slice(0, instruction.length - 1)\r\n        .map((ele) => <li>{ele}</li>);\r\n      this.setState({ theRecepieInfo: theRecepieInfoTemp });\r\n      this.setState({ instructionState: instructionDiv });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { theRecepieInfo, ingredients, instructionState } = this.state;\r\n    return (\r\n      <body>\r\n        <PageNavbar />\r\n        <div className=\"content\" style={{}}>\r\n          <p>Favorite: </p> \r\n          {/* <button style={{backgroundColor:\"transparent\", border:\"0px solid transparent\"}} onClick={() => { this.hanldeFavoriteChange() }}><FavoriteIcon style={{size:\"large\", color: `${this.state.color}` }} /></button> */}\r\n          <button style={{backgroundColor:\"transparent\", border:\"0px solid transparent\"}} onClick={() => { this.hanldeFavoriteChange() }}>{this.state.iconState}</button>\r\n          <div>{theRecepieInfo}</div>\r\n          <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}>Direction:</p>\r\n          <ol className=\"directions\" style={{ marginBorrom: \"0px\" }}>{instructionState}</ol>\r\n          <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}> Recommendations based on  Same Author and Similar Cooking Time</p>\r\n          <div id=\"recommendAuthorTime\" style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}>\r\n            {this.state.recommendAuthorTime}\r\n          </div>\r\n          <p style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}> Recommendations base on 90% Matching Ingredients</p>\r\n          <div id=\"recommendAuthorTime\" style={{ marginTop: \"40px\", marginLeft: \"70px\", marignBottom: \"0px\" }}>\r\n            {this.state.recommendBaseOnIngredient}\r\n          </div>\r\n        </div>\r\n      </body >\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleRecipe;\r\n"]},"metadata":{},"sourceType":"module"}