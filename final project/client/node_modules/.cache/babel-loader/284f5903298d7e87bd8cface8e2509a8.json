{"ast":null,"code":"var _jsxFileName = \"/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/RecipeList.js\";\n\n/* eslint-disable */\nimport React, { useEffect, useState, useReducer, useLayoutEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport image0 from \"../images/Recipelist.png\";\nimport findRecipeImage from \"../images/findRecipe2.png\";\nimport image5 from \"../images/Picture6.png\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\"\n  }\n}));\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nfunction RecipeList(props) {\n  const classes = useStyles();\n  const {\n    recipeInfo,\n    initialArray,\n    page1\n  } = props;\n  console.log(recipeInfo);\n  const [page, setPage] = useState(1);\n  console.log(page);\n  let [myarray, setMyarray] = useState(initialArray);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    setMyarray(recipeInfo.slice((value - 1) * 5, (value - 1) * 5 + 5));\n  };\n\n  if (page === 1) {\n    myarray = initialArray;\n  }\n\n  function handleLearnMore(id, author, totalTime) {\n    console.log(id);\n    window.top.location = `http://localhost:3000/learnmore/?id=${id}&author=${author}&totaltime=${totalTime}`;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container2 container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"fullpage3\",\n    alt: \"\",\n    src: findRecipeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"classes.root fullpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, myarray.map(recipe => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 0\n    },\n    className: \"search-container\\xA0container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      backgroundColor: \"#FEF2F2\",\n      height: 300,\n      border: \"4px solid #B6666F\",\n      backgroundColor: \"gray\",\n      height: \"100%\",\n      width: \"100%\",\n      backgroundImage: `url(${image0})`,\n      backgroundSize: \"100% 100%\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      // backgroundColor: \"#9E4244\",\n      margin: \"2.9%\",\n      marginTop: \"2.7%\",\n      marginLeft: \"4.5%\" // border: \"6px solid #B6666F\",\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    //{classes.img}\n    className: \"hover-shadow\",\n    alt: \"complex\",\n    src: recipe.RecipePhoto,\n    style: {\n      width: \"100%\",\n      height: 226,\n      objectFit: \"cover\",\n      borderRadius: \"20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    sm: true,\n    container: true,\n    style: {// backgroundColor: \"white\",\n      // height: \"100%\",\n      // width: \"100%\",\n      // backgroundImage: `url(${image0})`,\n      // backgroundSize: \"100% 100%\",\n      // backgroundRepeat: \"no-repeat\",\n      // borderLeft: \"6px solid #B6666F\",\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 0,\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    style: {\n      marginLeft: \"9%\",\n      marginTop: \"7.5%\",\n      color: \"#9E4244\",\n      fontFamily: \"Patua One\",\n      fontSize: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 23\n    }\n  }, recipe.RecipeName), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }, \"Post By\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, recipe.Author)), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    style: {\n      marginLeft: \"7.2%\",\n      color: \"#B6666F\",\n      fontFamily: \"Patua One\",\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"18px\",\n      marginLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 23\n    }\n  }, \"Keywords:\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }, recipe.keyword)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    style: {\n      marginLeft: \"7.2%\",\n      color: \"#B6666F\",\n      fontFamily: \"Patua One\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"18px\",\n      marginLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"18px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }, \"Time:\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 23\n    }\n  }, recipe.TotalTime), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, \"min\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"body2\",\n    style: {\n      marginLeft: \"70%\",\n      color: \"#9E4244\",\n      cursor: \"pointer\",\n      fontFamily: \"Patua One\",\n      fontSize: \"18px\"\n    },\n    onClick: () => handleLearnMore(recipe.RecipeID, recipe.Author, recipe.TotalTime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  }, \"Learn More\")))))))), /*#__PURE__*/React.createElement(Pagination, {\n    id: \"Pagination\",\n    count: recipeInfo.length / 5,\n    defaultPage: 1,\n    page: page,\n    onChange: handlePageChange,\n    color: \"standard\",\n    style: {\n      backgroundColor: \"#9E4244\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  })));\n} // localStorage.getItem(\"currentUser\")\n//localStorage.setItem(\"TOKEN_KEY\", token1);\n\n\nRecipeList.propTypes = {\n  recipeInfo: PropTypes.arrayOf(PropTypes.shape({\n    keyword: PropTypes.string.isRequired,\n    Author: PropTypes.string.isRequired,\n    Directions: PropTypes.string.isRequired,\n    Ingredients: PropTypes.string.isRequired,\n    RecipeName: PropTypes.string.isRequired,\n    RecipePhoto: PropTypes.string.isRequired,\n    RecipeID: PropTypes.number.isRequired,\n    TotalTime: PropTypes.string.isRequired\n  })),\n  initialArray: PropTypes.arrayOf(PropTypes.shape({\n    keyword: PropTypes.string.isRequired,\n    Author: PropTypes.string.isRequired,\n    Directions: PropTypes.string.isRequired,\n    Ingredients: PropTypes.string.isRequired,\n    RecipeName: PropTypes.string.isRequired,\n    RecipePhoto: PropTypes.string.isRequired,\n    RecipeID: PropTypes.number.isRequired,\n    TotalTime: PropTypes.string.isRequired\n  }))\n};\nRecipeList.defaultProps = {\n  recipeInfo: []\n};\nexport default RecipeList;","map":{"version":3,"sources":["/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/RecipeList.js"],"names":["React","useEffect","useState","useReducer","useLayoutEffect","useRef","makeStyles","Grid","Paper","Typography","Pagination","ButtonBase","Button","PropTypes","image0","findRecipeImage","image5","useStyles","theme","root","width","paper","padding","spacing","margin","maxWidth","image","height","img","display","maxHeight","RecipeList","props","classes","recipeInfo","initialArray","page1","console","log","page","setPage","myarray","setMyarray","handlePageChange","event","value","slice","handleLearnMore","id","author","totalTime","window","top","location","map","recipe","marginTop","backgroundColor","border","backgroundImage","backgroundSize","backgroundRepeat","marginLeft","RecipePhoto","objectFit","borderRadius","color","fontFamily","fontSize","RecipeName","Author","keyword","TotalTime","cursor","RecipeID","length","propTypes","arrayOf","shape","string","isRequired","Directions","Ingredients","number","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, {\n  useEffect,\n  useState,\n  useReducer,\n  useLayoutEffect,\n  useRef,\n} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport image0 from \"../images/Recipelist.png\";\nimport findRecipeImage from \"../images/findRecipe2.png\";\nimport image5 from \"../images/Picture6.png\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nfunction RecipeList(props) {\n  const classes = useStyles();\n  const { recipeInfo, initialArray, page1 } = props;\n  console.log(recipeInfo);\n  const [page, setPage] = useState(1);\n  console.log(page);\n  let [myarray, setMyarray] = useState(initialArray);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    setMyarray(recipeInfo.slice((value - 1) * 5, (value - 1) * 5 + 5));\n  };\n  if (page === 1) {\n    myarray = initialArray;\n  }\n\n  function handleLearnMore(id, author, totalTime) {\n    console.log(id);\n    window.top.location = `http://localhost:3000/learnmore/?id=${id}&author=${author}&totaltime=${totalTime}`;\n  }\n\n  return (\n    <div>\n      <div className=\"search-container2 container-fluid\">\n        <img className=\"fullpage3\" alt=\"\" src={findRecipeImage} />\n      </div>\n      <div className=\"classes.root fullpage\">\n        {myarray.map((recipe) => (\n          <div\n            style={{ marginTop: 0 }}\n            className=\"search-container container-fluid\"\n          >\n            <Grid\n              container\n              spacing={0}\n              style={{\n                backgroundColor: \"#FEF2F2\",\n                height: 300,\n                border: \"4px solid #B6666F\",\n                backgroundColor: \"gray\",\n                height: \"100%\",\n                width: \"100%\",\n                backgroundImage: `url(${image0})`,\n                backgroundSize: \"100% 100%\",\n                backgroundRepeat: \"no-repeat\",\n              }}\n            >\n              <Grid\n                item\n                xs={3}\n                style={{\n                  // backgroundColor: \"#9E4244\",\n                  margin: \"2.9%\",\n                  marginTop: \"2.7%\",\n                  marginLeft: \"4.5%\"\n                  // border: \"6px solid #B6666F\",\n                }}\n              >\n                {/* <ButtonBase className={classes.image} style={{width:350, height:226, marginTop:33}}> */}\n                <img\n                  //{classes.img}\n                  className=\"hover-shadow\"\n                  alt=\"complex\"\n                  src={recipe.RecipePhoto}\n                  style={{ width: \"100%\", height: 226, objectFit: \"cover\", borderRadius: \"20%\" }}\n                />\n                {/* </ButtonBase> */}\n              </Grid>\n              <Grid\n                item\n                xs={9}\n                sm\n                container\n                style={{\n                  // backgroundColor: \"white\",\n                  // height: \"100%\",\n                  // width: \"100%\",\n                  // backgroundImage: `url(${image0})`,\n                  // backgroundSize: \"100% 100%\",\n                  // backgroundRepeat: \"no-repeat\",\n                  // borderLeft: \"6px solid #B6666F\",\n                }}\n              >\n                <Grid\n                  item\n                  xs\n                  container\n                  direction=\"column\"\n                  spacing={0}\n                  style={{}}\n                >\n                  <Grid item xs>\n                    <Typography\n                      gutterBottom\n                      variant=\"subtitle1\"\n                      style={{\n                        marginLeft: \"9%\",\n                        marginTop: \"7.5%\",\n                        color: \"#9E4244\",\n                        fontFamily: \"Patua One\",\n                        fontSize: \"25px\",\n                      }}\n                    >\n                      <span>{recipe.RecipeName}</span>\n                      <span style={{ fontSize: \"15px\", marginLeft: \"2%\" }}>\n                        Post By\n                      </span>\n                      <span style={{ fontSize: \"15px\", marginLeft: \"0.5%\" }}>\n                        {recipe.Author}\n                      </span>\n                    </Typography>\n                    <Typography\n                      gutterBottom\n                      variant=\"subtitle1\"\n                      style={{\n                        marginLeft: \"7.2%\",\n                        color: \"#B6666F\",\n                        fontFamily: \"Patua One\",\n                        fontSize: \"15px\",\n                      }}\n                    >\n                      <span style={{ fontSize: \"18px\", marginLeft: \"2%\" }}>\n                        Keywords:\n                      </span>\n                      <span style={{ fontSize: \"15px\", marginLeft: \"0.5%\" }}>\n                        {recipe.keyword}\n                      </span>\n                    </Typography>\n                    <Typography\n                      variant=\"subtitle1\"\n                      style={{\n                        marginLeft: \"7.2%\",\n                        color: \"#B6666F\",\n                        fontFamily: \"Patua One\",\n                      }}\n                    >\n                      <span style={{ fontSize: \"18px\", marginLeft: \"2%\" }}>\n                        Total\n                      </span>\n                      <span style={{ fontSize: \"18px\", marginLeft: \"0.5%\" }}>\n                        Time:\n                      </span>\n                      <span style={{ fontSize: \"15px\", marginLeft: \"0.5%\" }}>\n                        {recipe.TotalTime}\n                      </span>\n                      <span style={{ fontSize: \"15px\", marginLeft: \"0.5%\" }}>\n                        min\n                      </span>\n                    </Typography>\n                    <Grid item>\n                      <Button\n                        variant=\"body2\"\n                        style={{\n                          marginLeft: \"70%\",\n                          color: \"#9E4244\",\n                          cursor: \"pointer\",\n                          fontFamily: \"Patua One\",\n                          fontSize: \"18px\",\n                        }}\n                        onClick={() => handleLearnMore(recipe.RecipeID, recipe.Author, recipe.TotalTime)}\n                      >\n                        Learn More\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        ))}\n        <Pagination\n          id=\"Pagination\"\n          count={recipeInfo.length / 5}\n          defaultPage={1}\n          page={page}\n          onChange={handlePageChange}\n          color=\"standard\"\n          style={{ backgroundColor: \"#9E4244\" }}\n        />\n      </div>\n    </div>\n  );\n}\n// localStorage.getItem(\"currentUser\")\n//localStorage.setItem(\"TOKEN_KEY\", token1);\nRecipeList.propTypes = {\n  recipeInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      keyword: PropTypes.string.isRequired,\n      Author: PropTypes.string.isRequired,\n      Directions: PropTypes.string.isRequired,\n      Ingredients: PropTypes.string.isRequired,\n      RecipeName: PropTypes.string.isRequired,\n      RecipePhoto: PropTypes.string.isRequired,\n      RecipeID: PropTypes.number.isRequired,\n      TotalTime: PropTypes.string.isRequired,\n    })\n  ),\n  initialArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      keyword: PropTypes.string.isRequired,\n      Author: PropTypes.string.isRequired,\n      Directions: PropTypes.string.isRequired,\n      Ingredients: PropTypes.string.isRequired,\n      RecipeName: PropTypes.string.isRequired,\n      RecipePhoto: PropTypes.string.isRequired,\n      RecipeID: PropTypes.number.isRequired,\n      TotalTime: PropTypes.string.isRequired,\n    })\n  ),\n};\nRecipeList.defaultProps = {\n  recipeInfo: [],\n};\n\nexport default RecipeList;\n"]},"metadata":{},"sourceType":"module"}