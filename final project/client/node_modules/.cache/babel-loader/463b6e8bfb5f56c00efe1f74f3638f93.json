{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lepan\\\\Desktop\\\\CIS550-Project\\\\final project\\\\client\\\\src\\\\components\\\\IngredientOption.js\";\n\n/* eslint-disable no-use-before-define */\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nimport React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Avatar from '@material-ui/core/Avatar'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField'; // import { getTag } from \"./tagFunction\";\n// import { array } from 'prop-types';\n\nimport { fetchIngredient } from \"./getData\"; // import Chip from '@material-ui/core/Chip';\n// const filter = createFilterOptions();\n// values.forEach((value) => {\n//   const theValue = value;\n//   theValue.pic = fetchIngredient(value.title);\n// }); \n\nexport default class IngredientOption extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTagsChange = (event, values) => {\n      values.map(async function (entry) {\n        entry.pic = await fetchIngredient(entry.title).then(res => res);\n        return entry;\n      });\n      this.setState({\n        tags: values\n      });\n      const {\n        tags\n      } = this.state;\n      console.log(tags);\n    };\n\n    this.state = {\n      tags: []\n    };\n    this.onTagsChange = this.onTagsChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      multiple: true // id=\"tags-outlined\"\n      ,\n      options: top100Films,\n      getOptionLabel: option => option.title,\n      defaultValue: [top100Films[13]],\n      onChange: this.onTagsChange,\n      renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/React.createElement(Chip, Object.assign({\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          alt: \"Remy Sharp\",\n          src: option.pic,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }\n        }),\n        variant: \"outlined\",\n        label: option.title\n      }, getTagProps({\n        index\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }))),\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        variant: \"outlined\",\n        label: \"Multiple values\",\n        placeholder: \"Favorites\",\n        margin: \"normal\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\nconst top100Films = [{\n  title: 'apple',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["C:/Users/lepan/Desktop/CIS550-Project/final project/client/src/components/IngredientOption.js"],"names":["React","Chip","Autocomplete","Avatar","TextField","fetchIngredient","IngredientOption","Component","constructor","props","onTagsChange","event","values","map","entry","pic","title","then","res","setState","tags","state","console","log","bind","render","width","top100Films","option","value","getTagProps","index","params","year"],"mappings":"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","sourcesContent":["\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\r\nimport React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import { getTag } from \"./tagFunction\";\r\n// import { array } from 'prop-types';\r\nimport {fetchIngredient} from \"./getData\";\r\n// import Chip from '@material-ui/core/Chip';\r\n\r\n// const filter = createFilterOptions();\r\n\r\n    // values.forEach((value) => {\r\n    //   const theValue = value;\r\n    //   theValue.pic = fetchIngredient(value.title);\r\n    // }); \r\n\r\nexport default class IngredientOption extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tags: []\r\n    };\r\n    this.onTagsChange = this.onTagsChange.bind(this);\r\n  }\r\n    \r\n  onTagsChange = (event, values) => {\r\n    values.map(async function(entry) {\r\n      entry.pic = await fetchIngredient(entry.title).then((res) => res);\r\n      return entry;\r\n    });\r\n    this.setState({\r\n      tags: values\r\n    });\r\n    const {tags} = this.state;\r\n    console.log(tags);\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <div style={{ width: 500 }}>\r\n        <Autocomplete\r\n          multiple\r\n          // id=\"tags-outlined\"\r\n          options={top100Films}\r\n          getOptionLabel={option => option.title}\r\n          defaultValue={[top100Films[13]]}\r\n          onChange={this.onTagsChange}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip avatar={<Avatar alt=\"Remy Sharp\" src={option.pic} />} variant=\"outlined\" label={option.title} {...getTagProps({ index })} />\r\n            ))}\r\n          renderInput={params => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              label=\"Multiple values\"\r\n              placeholder=\"Favorites\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}   \r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'apple', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'Léon: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n  { title: 'Casablanca', year: 1942 },\r\n  { title: 'City Lights', year: 1931 },\r\n  { title: 'Psycho', year: 1960 },\r\n  { title: 'The Green Mile', year: 1999 },\r\n  { title: 'The Intouchables', year: 2011 },\r\n  { title: 'Modern Times', year: 1936 },\r\n  { title: 'Raiders of the Lost Ark', year: 1981 },\r\n  { title: 'Rear Window', year: 1954 },\r\n  { title: 'The Pianist', year: 2002 },\r\n  { title: 'The Departed', year: 2006 },\r\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n  { title: 'Back to the Future', year: 1985 },\r\n  { title: 'Whiplash', year: 2014 },\r\n  { title: 'Gladiator', year: 2000 },\r\n  { title: 'Memento', year: 2000 },\r\n  { title: 'The Prestige', year: 2006 },\r\n  { title: 'The Lion King', year: 1994 },\r\n  { title: 'Apocalypse Now', year: 1979 },\r\n  { title: 'Alien', year: 1979 },\r\n  { title: 'Sunset Boulevard', year: 1950 },\r\n  {\r\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\r\n    year: 1964,\r\n  },\r\n  { title: 'The Great Dictator', year: 1940 },\r\n  { title: 'Cinema Paradiso', year: 1988 },\r\n  { title: 'The Lives of Others', year: 2006 },\r\n  { title: 'Grave of the Fireflies', year: 1988 },\r\n  { title: 'Paths of Glory', year: 1957 },\r\n  { title: 'Django Unchained', year: 2012 },\r\n  { title: 'The Shining', year: 1980 },\r\n  { title: 'WALL·E', year: 2008 },\r\n  { title: 'American Beauty', year: 1999 },\r\n  { title: 'The Dark Knight Rises', year: 2012 },\r\n  { title: 'Princess Mononoke', year: 1997 },\r\n  { title: 'Aliens', year: 1986 },\r\n  { title: 'Oldboy', year: 2003 },\r\n  { title: 'Once Upon a Time in America', year: 1984 },\r\n  { title: 'Witness for the Prosecution', year: 1957 },\r\n  { title: 'Das Boot', year: 1981 },\r\n  { title: 'Citizen Kane', year: 1941 },\r\n  { title: 'North by Northwest', year: 1959 },\r\n  { title: 'Vertigo', year: 1958 },\r\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n  { title: 'Reservoir Dogs', year: 1992 },\r\n  { title: 'Braveheart', year: 1995 },\r\n  { title: 'M', year: 1931 },\r\n  { title: 'Requiem for a Dream', year: 2000 },\r\n  { title: 'Amélie', year: 2001 },\r\n  { title: 'A Clockwork Orange', year: 1971 },\r\n  { title: 'Like Stars on Earth', year: 2007 },\r\n  { title: 'Taxi Driver', year: 1976 },\r\n  { title: 'Lawrence of Arabia', year: 1962 },\r\n  { title: 'Double Indemnity', year: 1944 },\r\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\r\n  { title: 'Amadeus', year: 1984 },\r\n  { title: 'To Kill a Mockingbird', year: 1962 },\r\n  { title: 'Toy Story 3', year: 2010 },\r\n  { title: 'Logan', year: 2017 },\r\n  { title: 'Full Metal Jacket', year: 1987 },\r\n  { title: 'Dangal', year: 2016 },\r\n  { title: 'The Sting', year: 1973 },\r\n  { title: '2001: A Space Odyssey', year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: 'Toy Story', year: 1995 },\r\n  { title: 'Bicycle Thieves', year: 1948 },\r\n  { title: 'The Kid', year: 1921 },\r\n  { title: 'Inglourious Basterds', year: 2009 },\r\n  { title: 'Snatch', year: 2000 },\r\n  { title: '3 Idiots', year: 2009 },\r\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}