{"ast":null,"code":"var _jsxFileName = \"/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/RecipeList.js\";\n\n/* eslint-disable */\nimport React, { useEffect, useState, useReducer, useLayoutEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport image0 from \"../images/Picture5.png\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\"\n  }\n}));\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nfunction RecipeList(props) {\n  const classes = useStyles();\n  const {\n    recipeInfo,\n    initialArray\n  } = props;\n  console.log(recipeInfo);\n  const [page, setPage] = useState(1); // let b = Array.from(Object.create(initialArray));\n  // console.log(\"b\", b);\n\n  const [myarray, setMyarray] = useState(initialArray); // console.log(\"myarray: \", myarray);\n  // const updatenum = () => setnum((num) => num + 1);\n  // const [num, setnum] = useState(0);\n  // const prevPage2 = useRef(0);\n  // const initial = [];\n  // for(let i = 0; i < 5; i+=1) {\n  //   if((page.page-1)*5+i < recipeInfo.length){\n  //     initial.push(recipeInfo[(page.page-1)*5+i]);\n  //   }\n  // }\n  // console.log(initial);\n  // const handleChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n  // console.log(typeof myarray);\n  // const [myArray, dispatch] = useReducer((myArray2, { type, value }) => {\n  //   switch (type) {\n  //     case \"add\":\n  //       return [...myArray2, value];\n  //     case \"remove\":\n  //       return myArray2.filter((_, index) => index === 0);\n  //     default:\n  //       return myArray2;\n  //   }\n  // }, []);\n  // const addList = () => {\n  //    for(let i = 0; i < 5; i+=1) {\n  //      if((page.page-1)*5+i < recipeInfo.length){\n  //       setMyarray(array => [...array, recipeInfo[(page.page-1)*5+i]]);\n  //      }\n  //    }\n  // }\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    setMyarray(recipeInfo.slice((value - 1) * 5, (value - 1) * 5 + 5)); // b = recipeInfo.slice((value-1)*5, (value-1)*5+5);\n    // console.log(b);\n    // updatenum();\n  }; // const initialChange = () => {\n  //   for(let i = 0; i < 5; i+=1) {\n  //     if(page.page === 0 && (page.page-1)*5+i < recipeInfo.length){\n  //       dispatch({type:\"add\", value: recipeInfo[(page.page-1)*5+i]});\n  //     }d\n  //   }\n  // }\n  // useEffect(() => {\n  //   console.log(page2, \"page2Value\");\n  //   if(firstUpdate.current && page2 === -2) {\n  //     setPage({\n  //       page: 1\n  //     });\n  //     firstUpdate.current = false;\n  //     // prevPage2.current = page2;\n  //     console.log(\"en\");\n  //   }\n  // else if (page2 !==  prevPage2.current) {\n  //   prevPage2.current = page2;\n  //   setPage({\n  //     page: 1\n  //   });\n  // }\n  // })\n  // const cleanup = () => {\n  //   const n = myArray.length;\n  //   for(let i = 0; i < n; i+=1) {\n  //     dispatch({type:\"remove\", value: 0});\n  //     console.log(myArray.length);\n  //   }\n  // }\n  // useEffect(() => {\n  //   setMyarray({myArray:[]});\n  //   addList();\n  //     else if (page2 === -2 && i < recipeInfo.length) {\n  //       dispatch({type:\"add\", value: recipeInfo[i]});\n  //     }\n  // }, [page]);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, b.map(recipe => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      backgroundColor: \"#9E4244\",\n      height: 300,\n      border: \"2px solid #B6666F\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      backgroundColor: \"#9E4244\",\n      margin: \"2.9%\",\n      marginTop: \"2.0%\",\n      border: \"6px solid #B6666F\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    alt: \"complex\",\n    src: recipe.RecipePhoto,\n    style: {\n      width: \"100%\",\n      height: 226,\n      objectFit: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    sm: true,\n    container: true,\n    style: {\n      backgroundColor: \"white\",\n      height: \"100%\",\n      width: \"100%\",\n      backgroundImage: `url(${image0})`,\n      backgroundSize: \"100% 100%\",\n      backgroundRepeat: \"no-repeat\",\n      borderLeft: \"4px solid #B6666F\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 0,\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    style: {\n      marginLeft: \"11%\",\n      marginTop: \"7%\",\n      color: \"white\",\n      fontFamily: \"Patua One\",\n      fontSize: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, recipe.RecipeName), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, \"Post By\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, recipe.Author)), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    style: {\n      marginLeft: \"9%\",\n      color: \"white\",\n      fontFamily: \"Patua One\",\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"18px\",\n      marginLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, \"Keywords:\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, recipe.keyword)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    style: {\n      marginLeft: \"9%\",\n      color: \"white\",\n      fontFamily: \"Patua One\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"18px\",\n      marginLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"18px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, \"Time:\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, recipe.TotalTime), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"15px\",\n      marginLeft: \"0.5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, \"min\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"body2\",\n    style: {\n      marginLeft: \"70%\",\n      marginBottom: \"100%\",\n      color: \"#E4C2C1\",\n      cursor: \"pointer\",\n      fontFamily: \"Patua One\",\n      fontSize: \"18px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, \"Learn More\"))))))), /*#__PURE__*/React.createElement(Pagination, {\n    count: 3,\n    page: page,\n    onChange: handlePageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }));\n}\n\nRecipeList.propTypes = {\n  recipeInfo: PropTypes.arrayOf(PropTypes.shape({\n    keyword: PropTypes.string.isRequired,\n    Author: PropTypes.string.isRequired,\n    Directions: PropTypes.string.isRequired,\n    Ingredients: PropTypes.string.isRequired,\n    RecipeName: PropTypes.string.isRequired,\n    RecipePhoto: PropTypes.string.isRequired,\n    RecipeID: PropTypes.number.isRequired,\n    TotalTime: PropTypes.string.isRequired\n  })),\n  initialArray: PropTypes.arrayOf(PropTypes.shape({\n    keyword: PropTypes.string.isRequired,\n    Author: PropTypes.string.isRequired,\n    Directions: PropTypes.string.isRequired,\n    Ingredients: PropTypes.string.isRequired,\n    RecipeName: PropTypes.string.isRequired,\n    RecipePhoto: PropTypes.string.isRequired,\n    RecipeID: PropTypes.number.isRequired,\n    TotalTime: PropTypes.string.isRequired\n  }))\n};\nRecipeList.defaultProps = {\n  recipeInfo: []\n};\nexport default RecipeList;","map":{"version":3,"sources":["/Users/lihanzhu/Documents/GitHub/CIS550-Project/final project/client/src/components/RecipeList.js"],"names":["React","useEffect","useState","useReducer","useLayoutEffect","useRef","makeStyles","Grid","Paper","Typography","Pagination","ButtonBase","Button","PropTypes","image0","useStyles","theme","root","width","paper","padding","spacing","margin","maxWidth","image","height","img","display","maxHeight","RecipeList","props","classes","recipeInfo","initialArray","console","log","page","setPage","myarray","setMyarray","handlePageChange","event","value","slice","b","map","recipe","marginTop","backgroundColor","border","RecipePhoto","objectFit","backgroundImage","backgroundSize","backgroundRepeat","borderLeft","marginLeft","color","fontFamily","fontSize","RecipeName","Author","keyword","TotalTime","marginBottom","cursor","propTypes","arrayOf","shape","string","isRequired","Directions","Ingredients","RecipeID","number","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, {\n  useEffect,\n  useState,\n  useReducer,\n  useLayoutEffect,\n  useRef,\n} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport image0 from \"../images/Picture5.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nfunction RecipeList(props) {\n  const classes = useStyles();\n  const { recipeInfo, initialArray } = props;\n  console.log(recipeInfo);\n  const [page, setPage] = useState(1);\n  // let b = Array.from(Object.create(initialArray));\n  // console.log(\"b\", b);\n  const [myarray, setMyarray] = useState(initialArray);\n  // console.log(\"myarray: \", myarray);\n  // const updatenum = () => setnum((num) => num + 1);\n  // const [num, setnum] = useState(0);\n  // const prevPage2 = useRef(0);\n  // const initial = [];\n  // for(let i = 0; i < 5; i+=1) {\n  //   if((page.page-1)*5+i < recipeInfo.length){\n  //     initial.push(recipeInfo[(page.page-1)*5+i]);\n  //   }\n  // }\n  // console.log(initial);\n  // const handleChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  // console.log(typeof myarray);\n\n  // const [myArray, dispatch] = useReducer((myArray2, { type, value }) => {\n  //   switch (type) {\n  //     case \"add\":\n  //       return [...myArray2, value];\n  //     case \"remove\":\n  //       return myArray2.filter((_, index) => index === 0);\n  //     default:\n  //       return myArray2;\n  //   }\n  // }, []);\n\n  // const addList = () => {\n  //    for(let i = 0; i < 5; i+=1) {\n  //      if((page.page-1)*5+i < recipeInfo.length){\n  //       setMyarray(array => [...array, recipeInfo[(page.page-1)*5+i]]);\n  //      }\n  //    }\n  // }\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    setMyarray(recipeInfo.slice((value - 1) * 5, (value - 1) * 5 + 5));\n    // b = recipeInfo.slice((value-1)*5, (value-1)*5+5);\n    // console.log(b);\n    // updatenum();\n  };\n\n  // const initialChange = () => {\n  //   for(let i = 0; i < 5; i+=1) {\n  //     if(page.page === 0 && (page.page-1)*5+i < recipeInfo.length){\n  //       dispatch({type:\"add\", value: recipeInfo[(page.page-1)*5+i]});\n  //     }d\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   console.log(page2, \"page2Value\");\n  //   if(firstUpdate.current && page2 === -2) {\n  //     setPage({\n  //       page: 1\n  //     });\n  //     firstUpdate.current = false;\n  //     // prevPage2.current = page2;\n  //     console.log(\"en\");\n  //   }\n  // else if (page2 !==  prevPage2.current) {\n  //   prevPage2.current = page2;\n  //   setPage({\n  //     page: 1\n  //   });\n  // }\n  // })\n\n  // const cleanup = () => {\n  //   const n = myArray.length;\n  //   for(let i = 0; i < n; i+=1) {\n  //     dispatch({type:\"remove\", value: 0});\n  //     console.log(myArray.length);\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   setMyarray({myArray:[]});\n  //   addList();\n  //     else if (page2 === -2 && i < recipeInfo.length) {\n  //       dispatch({type:\"add\", value: recipeInfo[i]});\n  //     }\n  // }, [page]);\n\n  return (\n    <div className={classes.root}>\n      {b.map((recipe) => (\n        <div style={{ marginTop: 0 }}>\n          <Grid\n            container\n            spacing={0}\n            style={{\n              backgroundColor: \"#9E4244\",\n              height: 300,\n              border: \"2px solid #B6666F\",\n            }}\n          >\n            <Grid\n              item\n              xs={3}\n              style={{\n                backgroundColor: \"#9E4244\",\n                margin: \"2.9%\",\n                marginTop: \"2.0%\",\n                border: \"6px solid #B6666F\",\n              }}\n            >\n              {/* <ButtonBase className={classes.image} style={{width:350, height:226, marginTop:33}}> */}\n              <img\n                className={classes.img}\n                alt=\"complex\"\n                src={recipe.RecipePhoto}\n                style={{ width: \"100%\", height: 226, objectFit: \"cover\" }}\n              />\n              {/* </ButtonBase> */}\n            </Grid>\n            <Grid\n              item\n              xs={9}\n              sm\n              container\n              style={{\n                backgroundColor: \"white\",\n                height: \"100%\",\n                width: \"100%\",\n                backgroundImage: `url(${image0})`,\n                backgroundSize: \"100% 100%\",\n                backgroundRepeat: \"no-repeat\",\n                borderLeft: \"4px solid #B6666F\",\n              }}\n            >\n              <Grid item xs container direction=\"column\" spacing={0} style={{}}>\n                <Grid item xs>\n                  <Typography\n                    gutterBottom\n                    variant=\"subtitle1\"\n                    style={{\n                      marginLeft: \"11%\",\n                      marginTop: \"7%\",\n                      color: \"white\",\n                      fontFamily: \"Patua One\",\n                      fontSize: \"25px\",\n                    }}\n                  >\n                    <span>{recipe.RecipeName}</span>\n                    <span style={{ fontSize: \"15px\", marginLeft: \"2%\" }}>\n                      Post By\n                    </span>\n                    <span style={{ fontSize: \"15px\", marginLeft: \"0.5%\" }}>\n                      {recipe.Author}\n                    </span>\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    variant=\"subtitle1\"\n                    style={{\n                      marginLeft: \"9%\",\n                      color: \"white\",\n                      fontFamily: \"Patua One\",\n                      fontSize: \"15px\",\n                    }}\n                  >\n                    <span style={{ fontSize: \"18px\", marginLeft: \"2%\" }}>\n                      Keywords:\n                    </span>\n                    <span style={{ fontSize: \"15px\", marginLeft: \"0.5%\" }}>\n                      {recipe.keyword}\n                    </span>\n                  </Typography>\n                  <Typography\n                    variant=\"subtitle1\"\n                    style={{\n                      marginLeft: \"9%\",\n                      color: \"white\",\n                      fontFamily: \"Patua One\",\n                    }}\n                  >\n                    <span style={{ fontSize: \"18px\", marginLeft: \"2%\" }}>\n                      Total\n                    </span>\n                    <span style={{ fontSize: \"18px\", marginLeft: \"0.5%\" }}>\n                      Time:\n                    </span>\n                    <span style={{ fontSize: \"15px\", marginLeft: \"0.5%\" }}>\n                      {recipe.TotalTime}\n                    </span>\n                    <span style={{ fontSize: \"15px\", marginLeft: \"0.5%\" }}>\n                      min\n                    </span>\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"body2\"\n                    style={{\n                      marginLeft: \"70%\",\n                      marginBottom: \"100%\",\n                      color: \"#E4C2C1\",\n                      cursor: \"pointer\",\n                      fontFamily: \"Patua One\",\n                      fontSize: \"18px\",\n                    }}\n                  >\n                    Learn More\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      ))}\n      <Pagination count={3} page={page} onChange={handlePageChange} />\n    </div>\n  );\n}\n\nRecipeList.propTypes = {\n  recipeInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      keyword: PropTypes.string.isRequired,\n      Author: PropTypes.string.isRequired,\n      Directions: PropTypes.string.isRequired,\n      Ingredients: PropTypes.string.isRequired,\n      RecipeName: PropTypes.string.isRequired,\n      RecipePhoto: PropTypes.string.isRequired,\n      RecipeID: PropTypes.number.isRequired,\n      TotalTime: PropTypes.string.isRequired,\n    })\n  ),\n  initialArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      keyword: PropTypes.string.isRequired,\n      Author: PropTypes.string.isRequired,\n      Directions: PropTypes.string.isRequired,\n      Ingredients: PropTypes.string.isRequired,\n      RecipeName: PropTypes.string.isRequired,\n      RecipePhoto: PropTypes.string.isRequired,\n      RecipeID: PropTypes.number.isRequired,\n      TotalTime: PropTypes.string.isRequired,\n    })\n  ),\n};\nRecipeList.defaultProps = {\n  recipeInfo: [],\n};\n\nexport default RecipeList;\n"]},"metadata":{},"sourceType":"module"}